var searchIndex = JSON.parse('{\
"eventually":{"doc":"A library providing components to build event-sourced …","t":[0,0,0,0,0,0,0,8,8,6,3,3,16,16,16,16,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,8,16,10,13,4,3,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,8,16,16,8,6,13,4,13,3,4,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,0,10,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,16,16,16,16,6,8,16,16,13,8,13,6,3,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,12,12,0,0,5,0,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,16,16,16,3,16,11,10,10,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10],"n":["aggregate","projection","repository","store","subscription","util","versioning","Aggregate","AggregateExt","AggregateId","AggregateRoot","AggregateRootFactory","Command","Error","Event","Id","State","apply","borrow","borrow","borrow_mut","borrow_mut","build","build_with_state","clone","clone_into","deref","eq","fmt","fold","from","from","from","from","handle","handle","id","into","into","serialize","state","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","Error","Event","Projection","SourceId","project","Aggregate","Error","Repository","Result","Store","add","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","get","into","into","new","remove","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","All","Any","AppendError","Error","Event","EventStore","EventStream","Exact","Expected","From","Persisted","Select","SourceId","append","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","is_conflict_error","ne","ne","ne","persistent","remove","sequence_number","serialize","source_id","stream","stream_all","take","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","0","0","EventBuilder","EventBuilderWithSequenceNumber","EventBuilderWithVersion","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","sequence_number","sequence_number","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","version","Error","Error","Error","Event","Event","EventStream","EventSubscriber","SourceId","SourceId","Store","Subscription","Subscription","SubscriptionStream","Transient","borrow","borrow","borrow_mut","borrow_mut","checkpoint","checkpoint","fmt","fmt","from","from","from","into","into","new","resume","resume","source","subscribe_all","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","inmemory","optional","spawn","sync","ConflictError","EventStore","EventStoreBuilder","LaggedError","Projector","actual","append","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","expected","fmt","fmt","fmt","fmt","fmt","for_aggregate","from","from","from","from","from","into","into","into","into","into","is_conflict_error","ne","new","new","remove","run","stream","stream_all","subscribe_all","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Aggregate","Command","Error","Event","Id","IntoAggregate","State","apply","apply_first","apply_next","borrow","borrow_mut","clone","clone_into","from","from","from","handle","handle_first","handle_next","into","into_aggregate","to_owned","try_from","try_into","type_id","RwLock","borrow","borrow_mut","const_new","const_with_max_readers","default","fmt","from","from","from","get_mut","into","into_inner","new","read","read_owned","try_from","try_into","try_read","try_read_owned","try_write","try_write_owned","type_id","with_max_readers","write","write_owned","Versioned","version"],"q":["eventually","","","","","","","eventually::aggregate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::projection","","","","","eventually::repository","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::repository::Error","","eventually::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::store::Expected","eventually::store::Select","eventually::store::persistent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::subscription","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::subscription::Error","","eventually::util","","","","eventually::util::inmemory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::util::optional","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::util::sync","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::versioning",""],"d":["Module containing support for the Aggergate pattern.","Contain support for <code>Projection</code>, an optimized read model of …","Module containing Repository implementation to retrieve, …","Module containing support for the Event Store.","Module containing support for Subscriptions to Events …","Collection of utilities that extends or implements some of …","Module containing support for Optimistic Concurrency using …","An <code>Aggregate</code> manages a domain entity <code>State</code>, acting as a …","Extension trait with some handy methods to use with …","A short extractor type for the <code>Aggregate</code> <code>Id</code>.","An <code>AggregateRoot</code> represents an handler to the <code>Aggregate</code> it…","Factory type for new <code>AggregateRoot</code> instances.","Commands are all the possible operations available on an …","Possible failures while <code>apply</code>ing <code>Event</code>s or handling <code>Command</code>…","Represents a specific, domain-related change to the …","Aggregate identifier: this should represent an unique …","State of the Aggregate: this should represent the Domain …","Applies an <code>Event</code> to the current Aggregate <code>State</code>.","","","","","Builds a new <code>AggregateRoot</code> instance for the specified …","Builds a new <code>AggregateRoot</code> instance for the specified …","","","","","","Applies a list of <code>Event</code>s from an <code>Iterator</code> to the current …","","","","","Handles the requested <code>Command</code> and returns a list of <code>Event</code>s …","Handles the submitted <code>Command</code> using the <code>Aggregate::handle</code> …","Returns a reference to the Aggregate <code>Id</code> that represents …","","","","Returns a reference to the current Aggregate <code>State</code>.","","","","","","","","","Type of the possible error that might occur when projecting","Event to be stored in the <code>EventStore</code>, typically an …","A <code>Projection</code> is an optimized read model (or materialized …","Type of the Source id, typically an <code>AggregateId</code>.","Updates the next value of the <code>Projection</code> using the …","Error returned by the <code>Aggregate</code>, usually when recreating …","Error type returned by the <code>Repository</code>.","Implementation of the Repository pattern for storing, …","Result type returned by the <code>Repository</code>.","Error returned by the underlying <code>EventStore</code>.","Adds a new <code>State</code> of the <code>Aggregate</code> into the <code>Repository</code>, …","","","","","","","","","","","Returns the <code>Aggregate</code> from the <code>Repository</code> with the …","","","Creates a new <code>Repository</code> instance, using the <code>Aggregate</code> and …","Removes the specified <code>Aggregate</code> from the <code>Repository</code>, using …","","","","","","","","","","","","To return all the <code>Event</code>s in the <code>EventStream</code>.","Append events disregarding the current <code>Aggregate</code> version.","Error type returned by <code>append</code> in <code>EventStore</code> …","Possible errors returned by the <code>EventStore</code> when requesting …","Event to be stored in the <code>EventStore</code>, typically an …","An Event Store is an append-only, ordered list of <code>Event</code>s …","Stream type returned by the <code>EventStore::stream</code> method.","Append events only if the current version of the <code>Aggregate</code> …","Specifies the optimistic locking level when performing …","To return a slice of the <code>EventStream</code>, starting from those …","An <code>Event</code> wrapper for events that have been successfully …","Selection operation for the events to capture in an …","Type of the Source id, typically an <code>AggregateId</code>.","Appends a new list of <code>Event</code>s to the Event Store, for the …","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>EventBuilder</code> from the provided Event value.","","","","","Returns true if the error is due to a version conflict …","","","","Contains a type-state builder for <code>Persisted</code> type.","Drops all the <code>Event</code>s related to one <code>Source</code>, specified by …","Returns the event sequence number.","","Returns the <code>SourceId</code> of the persisted event.","Streams a list of <code>Event</code>s from the <code>EventStore</code> back to the …","Streams a list of <code>Event</code>s from the <code>EventStore</code> back to the …","Unwraps the inner <code>Event</code> from the <code>Persisted</code> wrapper.","","","","","","","","","","","","","","","","Creates a new <code>Persisted</code> by wrapping an Event value.","Next step in creating a new <code>Persisted</code> carrying an Event …","Next step in creating a new <code>Persisted</code> carrying an Event …","","","","","","","","","","","","","","Specifies the <code>Persisted</code> sequence number and moves to the …","Specifies the <code>Persisted</code> sequence number and moves to the …","","","","","","","","","","Specifies the <code>Persisted</code> version and moves to the next …","Specifies the <code>Persisted</code> version and moves to the next …","Error type returned by a <code>Transient</code> Subscription.","Possible errors returned when receiving events from the …","Possible errors returned when receiving events from the …","Event type stored in the <code>EventStore</code>, typically an …","Event type stored in the <code>EventStore</code>, typically an …","Stream of events returned by the …","Component to let users subscribe to newly-inserted events …","Type of the Source id, typically an <code>AggregateId</code>.","Type of the Source id, typically an <code>AggregateId</code>.","Error caused by the Subscription’s <code>EventStore</code>.","A Subscription to an <code>EventStream</code> which can be “…","Error caused by the Subscription’s <code>EventSubscriber</code>.","Stream of events returned by the <code>Subscription::resume</code> …","<code>Subscription</code> type which gets deleted once the process …","","","","","Saves the provided version (or sequence number) as the …","","","","Specifies the sequence number of the <code>Event</code> the …","","","","","Creates a new <code>Subscription</code> using the specified <code>EventStore</code> …","Resumes the current state of a <code>Subscription</code> by returning …","","","Subscribes to all new events persisted in the <code>EventStore</code>, …","","","","","","","","","","Contains supporting entities using an in-memory backend.","Contains a different flavour of the <code>Aggregate</code> trait, while …","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","Module containing the asynchronous synchronization …","Error returned by the <code>EventStore::append</code> when a conflict …","An in-memory <code>EventStore</code> implementation, backed by an …","Builder for <code>EventStore</code> instances.","Error returned by the <code>EventSubscriber</code> when reading elements","A <code>Projector</code> manages the state of a single <code>Projection</code> by …","The actual version passed by the caller to the Store.","","","","","","","","","","","","","","","","The last version value found the Store.","","","","","","Builds a new <code>EventStore</code> instance compatible with the …","","","","","","","","","","","","","Create a new Projector from the provided <code>Projection</code> and …","Creates a new EventStore with a specified in-memory …","","Starts the update of the <code>Projection</code> by processing all the …","","","","","","","","","","","","","","","","","","","","","","An <code>Option</code>-flavoured, <code>Aggregate</code>-compatible trait to model …","Commands supported by the Aggregate.","Error produced by the the Aggregate while applying <code>Event</code>s …","Events produced and supported by the Aggregate.","Identifier type of the Aggregate.","<em>Newtype pattern</em> to ensure compatibility between …","State of the Aggregate.","","Applies the specified <code>Event</code> when the <code>State</code> is empty.","Applies the specified <code>Event</code> on a pre-existing <code>State</code> value.","","","","","","","","","Handles the specified <code>Command</code>when the <code>State</code> is empty.","Handles the specified <code>Command</code> on a pre-existing <code>State</code> …","","Translates the current <code>optional::Aggregate</code> instance into a …","","","","","An asynchronous reader-writer lock.","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","Returns a mutable reference to the underlying data.","","Consumes the lock, returning the underlying data.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Data type that carries a version for Optimistic …","Current version of the data."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,3,2,3,2,2,2,2,3,3,3,4,2,2,2,3,1,3,3,2,3,3,3,2,2,3,2,3,2,3,3,5,5,0,5,5,6,0,0,0,6,7,6,7,6,7,7,7,6,6,6,7,7,6,7,7,7,6,7,6,6,7,6,7,6,7,8,9,10,11,0,12,12,0,0,11,0,10,0,0,12,12,10,11,13,10,11,13,10,11,13,10,11,13,13,13,10,11,13,10,11,13,10,11,13,13,10,11,13,14,10,11,13,0,12,13,13,13,12,12,13,10,11,13,10,11,13,10,11,13,10,11,13,13,15,16,0,0,0,17,18,19,17,18,19,17,17,18,19,17,18,19,17,18,17,18,19,17,18,19,17,18,19,17,19,0,20,21,20,21,0,0,20,21,22,0,22,0,0,23,22,23,22,21,23,22,22,23,23,22,23,22,23,21,23,22,20,22,23,22,23,22,23,22,24,25,0,0,0,0,0,0,0,0,0,26,27,28,29,26,30,27,28,29,26,30,27,27,27,27,26,26,26,26,30,30,27,29,28,29,26,30,27,28,29,26,30,27,26,26,28,27,27,28,27,27,27,27,26,30,28,29,26,30,27,28,29,26,30,27,28,29,26,30,27,0,31,31,31,31,0,31,32,31,31,32,32,32,32,32,32,32,32,31,31,32,31,32,32,32,32,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,34],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["aggregateroot",3]],[[["u32",15]],["aggregateroot",3]],[[],["aggregaterootfactory",3]],[[]],[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],null,null,null,null,[[["persisted",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,null,null,[[["aggregateroot",3]]],[[]],[[]],[[]],[[]],[[],["repository",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["aggregaterootfactory",3]]],[[]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["expected",4]],[["boxfuture",6,["result"]],["result",4,["u32"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["select",4]],[[],["expected",4]],[[],["persisted",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["select",4]],["bool",15]],[[["expected",4]],["bool",15]],[[["persisted",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["eventbuilder",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["select",4]],["bool",15]],[[["expected",4]],["bool",15]],[[["persisted",3]],["bool",15]],null,[[],[["result",4],["boxfuture",6,["result"]]]],[[],["u32",15]],[[],["result",4]],[[]],[[["select",4]],[["boxfuture",6,["result"]],["result",4,["eventstream"]]]],[[["select",4]],[["boxfuture",6,["result"]],["result",4,["eventstream"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["eventbuilderwithsequencenumber",3]],[[["u32",15]],["persisted",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]],["eventbuilderwithversion",3]],[[["u32",15]],["persisted",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["u32",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u32",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[],["subscriptionstream",6]],[[],["subscriptionstream",6]],[[],[["option",4,["error"]],["error",8]]],[[],["eventstream",6]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[],["joinhandle",3]],null,null,null,null,null,null,null,[[["vec",3],["expected",4]],[["boxfuture",6,["result"]],["result",4,["u32"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventstore",3]],[[]],[[]],[[["conflicterror",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["eventstore",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["conflicterror",3]],["bool",15]],[[["arc",3,["rwlock"]],["rwlock",3]]],[[["usize",15]]],[[],[["result",4],["boxfuture",6,["result"]]]],[[]],[[["select",4]],[["boxfuture",6,["result"]],["result",4,["eventstream"]]]],[[["select",4]],[["boxfuture",6,["result"]],["result",4,["eventstream"]]]],[[],["eventstream",6]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["intoaggregate",3]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[],["intoaggregate",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["rwlock",3]],[[["u32",15]],["rwlock",3]],[[],["rwlock",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["rwlock",3]],[[]],[[]],[[]],[[],["rwlock",3]],[[]],[[["arc",3,["rwlock"]],["rwlock",3]]],[[],["result",4]],[[],["result",4]],[[],[["rwlockreadguard",3],["trylockerror",3],["result",4,["rwlockreadguard","trylockerror"]]]],[[["arc",3,["rwlock"]],["rwlock",3]],[["trylockerror",3],["ownedrwlockreadguard",3],["result",4,["ownedrwlockreadguard","trylockerror"]]]],[[],[["trylockerror",3],["result",4,["rwlockwriteguard","trylockerror"]],["rwlockwriteguard",3]]],[[["arc",3,["rwlock"]],["rwlock",3]],[["trylockerror",3],["result",4,["ownedrwlockwriteguard","trylockerror"]],["ownedrwlockwriteguard",3]]],[[],["typeid",3]],[[["u32",15]],["rwlock",3]],[[]],[[["arc",3,["rwlock"]],["rwlock",3]]],null,[[],["u32",15]]],"p":[[8,"Aggregate"],[3,"AggregateRootFactory"],[3,"AggregateRoot"],[8,"AggregateExt"],[8,"Projection"],[4,"Error"],[3,"Repository"],[13,"Aggregate"],[13,"Store"],[4,"Select"],[4,"Expected"],[8,"EventStore"],[3,"Persisted"],[8,"AppendError"],[13,"Exact"],[13,"From"],[3,"EventBuilder"],[3,"EventBuilderWithVersion"],[3,"EventBuilderWithSequenceNumber"],[8,"EventSubscriber"],[8,"Subscription"],[4,"Error"],[3,"Transient"],[13,"Store"],[13,"Subscription"],[3,"ConflictError"],[3,"EventStore"],[3,"Projector"],[3,"EventStoreBuilder"],[3,"LaggedError"],[8,"Aggregate"],[3,"IntoAggregate"],[3,"RwLock"],[8,"Versioned"]]},\
"eventually_postgres":{"doc":"<code>eventually</code> type implementations for PostgreSQL.","t":[0,0,0,13,13,13,4,3,3,3,6,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,3,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,4,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["store","subscriber","subscription","Bb8","DecodeEvent","EncodeEvents","Error","EventStore","EventStoreBuilder","EventStoreBuilderMigrated","PoolResult","Postgres","Result","append","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","fmt","fmt","fmt","for_aggregate","from","from","from","from","from","from","into","into","into","into","is_conflict_error","migrate_database","remove","source","stream","stream_all","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","Connection","Deserialize","EventSubscriber","Result","SubscriberError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","new","subscribe_all","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","Checkpoint","Error","Persistent","PersistentBuilder","Store","Subscriber","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checkpoint","fmt","fmt","from","from","from","get_or_create","into","into","into","new","resume","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0"],"q":["eventually_postgres","","","eventually_postgres::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually_postgres::store::Error","","","","eventually_postgres::subscriber","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually_postgres::subscriber::SubscriberError","","eventually_postgres::subscription","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually_postgres::subscription::Error","",""],"d":["Contains an <code>EventStore</code> implementation using PostgreSQL as …","Contains an <code>EventSubscriber</code> implementation using PostgreSQL","Contains a persisted implementation of the <code>Subscription</code> …","Error returned by bb8 connection pool.","Error when decoding persistent events from the database …","Error when encoding the events in <code>append</code> to JSON prior to …","Error type returned by the <code>EventStore</code> implementation, …","<code>EventStore</code> implementation using a PostgreSQL backend.","Builder type for <code>EventStore</code> instances.","Builder step for <code>EventStore</code> instances, after the database …","Result returning the connection pool <code>Error</code> type.","Error returned by Postgres when executing queries.","Result returning the crate <code>Error</code> type.","","","","","","","","","","Creates a new <code>EventStore</code> instance using the specified name …","Returns a new builder instance after migrations have been …","","","","","","Creates a new <code>EventStore</code> for an <code>Aggregate</code> type.","","","","","","","","","","","","Ensure the database is migrated to the latest version.","","","","","","","","","","","","","","","","","","","","","","","","","","","Error variant returned when the connection, used for <code>LISTEN</code>","Error variant returned when deserializing payloads coming …","Subscriber for listening to new events committed to an …","Alias type for a <code>Result</code> having <code>SubscriberError</code> as error …","Error returned by the <code>TryStream</code> on <code>subscribe_all</code>","","","","","","","","","","","","","","","Opens a new <code>LISTEN</code> stream on the database pointed by the …","","","","","","","","","","","","","","","Error variant returned when an issue has occurred during …","Error types returned by a <code>Persistent</code> Subscription.","<code>Subscription</code> type with persistent state over a Postgres …","Builder type for multiple <code>Persistent</code> Subscription instance.","Error variant returned when the cause of the error is …","Error variant returned when the cause of the error is …","","","","","","","","","","","","","Creates a new <code>Persisted</code> Subscription with the specified …","","","","Creates a new <code>PersistentBuilder</code> instance.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,0,0,0,0,0,1,0,2,3,4,1,2,3,4,1,2,4,3,2,2,1,1,2,4,3,4,1,1,1,2,3,4,1,2,1,3,2,1,2,2,2,1,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,5,6,7,8,9,9,0,0,0,9,10,9,10,9,10,9,10,9,9,9,10,9,10,10,10,9,10,9,9,10,9,10,9,10,9,10,11,12,13,0,0,0,13,13,14,15,13,14,15,13,15,13,13,14,15,13,14,14,15,13,14,15,13,13,14,15,13,14,15,13,14,15,13,14,15,13,16,17,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["expected",4],["vec",3]],[["boxfuture",6,["result"]],["result",6,["u32"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["postgresconnectionmanager",3],["pool",3,["postgresconnectionmanager"]]],["eventstorebuildermigrated",3]],[[],["eventstore",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]]],[[]],[[]],[[["runerror",4,["error"]],["error",3]]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["postgresconnectionmanager",3],["pool",3,["postgresconnectionmanager"]]]],[[],[["boxfuture",6,["result"]],["result",6]]],[[],[["error",8],["option",4,["error"]]]],[[["select",4]],[["boxfuture",6,["result"]],["result",6,["eventstream"]]]],[[["select",4]],[["boxfuture",6,["result"]],["result",6,["eventstream"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["subscribererror",4]],[[],["eventsubscriber",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]]],[[],["eventstream",6]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["string",3]]],[[]],[[]],[[]],[[["postgresconnectionmanager",3],["pool",3,["postgresconnectionmanager"]],["eventstore",3],["eventsubscriber",3]]],[[],["subscriptionstream",6]],[[],[["error",8],["option",4,["error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null],"p":[[4,"Error"],[3,"EventStore"],[3,"EventStoreBuilder"],[3,"EventStoreBuilderMigrated"],[13,"DecodeEvent"],[13,"EncodeEvents"],[13,"Postgres"],[13,"Bb8"],[4,"SubscriberError"],[3,"EventSubscriber"],[13,"Deserialize"],[13,"Connection"],[4,"Error"],[3,"PersistentBuilder"],[3,"Persistent"],[13,"Store"],[13,"Subscriber"],[13,"Checkpoint"]]},\
"eventually_redis":{"doc":"Redis backend implementation for <code>eventually</code> crate.","t":[3,3,13,13,13,13,13,13,13,13,13,3,3,13,13,3,17,4,6,13,13,13,4,6,4,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Builder","BuilderWithSourceName","Checkpoint","CheckpointFromRedis","Connection","DecodeEvents","DecodeEvents","DecodeJSON","DecodeMessage","DecodeSourceId","EncodeEvents","EventStore","EventSubscriber","NoKey","Payload","PersistentSubscription","STREAM_PAGE_DEFAULT","StoreError","StoreResult","Stream","Stream","Subscribe","SubscriberError","SubscriberResult","SubscriptionError","SubscriptionResult","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_persistent_subscription","build_store","build_subscriber","checkpoint","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_conflict_error","new","remove","resume","source","source","source","source_name","stream","stream_all","stream_page_size","stream_page_size","subscribe_all","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1"],"q":["eventually_redis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually_redis::StoreError","","","","","eventually_redis::SubscriberError","","","","","eventually_redis::SubscriptionError","","","",""],"d":["Builder type for <code>EventStore</code> and <code>EventSubscriber</code> types.","Second-step builder type for <code>EventStore</code> and <code>EventSubscriber</code>…","Error returned when Redis didn’t acknowledge an <code>XACK</code> …","Error returned when failed to acknowledge one Redis message","Error returned when failed to establish a <code>PubSub</code> connection","Error returned when failed to decoding events from JSON …","Error returned when failed to decoding events from JSON …","Error returned when failed to decoding events from JSON …","Error returned when failed to decode the payload received …","Error returned when attempting to decode the source id …","Error returned when failed to encode events to JSON during …","Redis backend implementation for <code>eventually::EventStore</code> …","Redis backend implementation for …","Error returned when attempting to read a key from the …","Error returned when failed to get the payload from a …","<code>Subscription</code> implementation with persistent state over a …","Default size of a paginated request to Redis …","Error types returned by the <code>eventually::EventStore</code> …","Result returning the crate <code>StoreError</code> type.","Error returned when reading the stream coming from …","Error returned when reading the stream coming from the …","Error returned when failed to execute the <code>SUBSCRIBE</code> command","Error types returned by the <code>eventually::EventSubscriber</code> …","Result returning the crate <code>SubscriberError</code> type.","Error types returned by the <code>eventually::Subscription</code> …","Result returning the crate <code>SubscriptionError</code> type.","","","","","","","","","","","","","","","","","","Builds a new named <code>PersistentSubscription</code> instance.","Builds a new <code>EventStore</code> instance.","Builds a new <code>EventSubscriber</code> instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new builder instance using the specified Redis …","","","","","","Assignes the specified source name to a copy of the …","","","Changes the page size used by the <code>Stream</code> returned in …","Changes the page size used by the <code>Stream</code> returned in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,2,3,1,3,2,2,3,0,0,3,2,0,0,0,0,3,1,2,0,0,0,0,4,3,4,2,5,1,6,7,8,3,4,2,5,1,6,7,8,8,8,8,6,4,5,6,7,8,4,5,6,7,8,3,3,2,2,1,1,3,4,2,5,1,6,7,8,3,4,2,5,1,6,7,8,3,7,4,6,3,2,1,7,4,4,7,8,5,4,5,6,7,8,3,2,1,3,4,2,5,1,6,7,8,3,4,2,5,1,6,7,8,3,4,2,5,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["expected",4],["vec",3]],[["storeresult",6,["u32"]],["boxfuture",6,["storeresult"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[]],[[],["eventsubscriber",3]],[[["u32",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["eventstore",3]],[[],["eventsubscriber",3]],[[],["persistentsubscription",3]],[[],["builder",3]],[[],["builderwithsourcename",3]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["client",3]]],[[],[["storeresult",6],["boxfuture",6,["storeresult"]]]],[[],["subscriptionstream",6]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[["str",15]],["builderwithsourcename",3]],[[["select",4]],[["storeresult",6,["storeeventstream"]],["boxfuture",6,["storeresult"]]]],[[["select",4]],[["storeresult",6,["storeeventstream"]],["boxfuture",6,["storeresult"]]]],[[["usize",15]]],[[["usize",15]]],[[],["subscribereventstream",6]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"SubscriptionError"],[4,"SubscriberError"],[4,"StoreError"],[3,"EventStore"],[3,"EventSubscriber"],[3,"PersistentSubscription"],[3,"Builder"],[3,"BuilderWithSourceName"],[13,"EncodeEvents"],[13,"DecodeEvents"],[13,"DecodeJSON"],[13,"Stream"],[13,"NoKey"],[13,"Connection"],[13,"Payload"],[13,"DecodeMessage"],[13,"Subscribe"],[13,"DecodeSourceId"],[13,"DecodeEvents"],[13,"Stream"],[13,"CheckpointFromRedis"],[13,"Checkpoint"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};