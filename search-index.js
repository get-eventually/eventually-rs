var searchIndex = new Map(JSON.parse('[\
["bank_accounting",{"doc":"","t":"CCCCCCCFFFFOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNONNNNNNNNNNNNNNNNPPFGGIIIFPPPPPPPPFIPPPPPPPPNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOFNNNNNNNNNNNNNNNNHFFFSFFFOOOOOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNMNNNNNNNNNNMNNNNNNNNNFPGPFFPFPFPFPFPFPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOONOONNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["application","domain","grpc","postgres","proto","serde","tracing","DepositInBankAccount","OpenBankAccount","SendTransferToBankAccount","Service","amount","bank_account_holder_id","bank_account_id","bank_account_id","bank_account_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","handle","handle","handle","into","into","into","into","into_request","into_request","into_request","into_request","message","name","name","name","opening_balance","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AlreadyClosed","AlreadyOpened","BankAccount","BankAccountError","BankAccountEvent","BankAccountHolderId","BankAccountId","BankAccountRepository","BankAccountRoot","Closed","DepositWasRecorded","EmptyAccountHolderId","EmptyAccountId","InsufficientFunds","NegativeDepositAttempted","NoMoneyDeposited","NotOpenedYet","Transaction","TransactionId","TransferWasConfirmed","TransferWasDeclined","TransferWasReceived","TransferWasSent","WasClosed","WasOpened","WasReopened","WrongTransactionRecipient","aggregate_id","amount","apply","beneficiary_account_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","deposit","deref","deref_mut","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","id","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","name","open","receive_transfer","record_transfer_success","reopen","send_transfer","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","vzip","vzip","vzip","vzip","vzip","account_holder_id","amount","id","initial_balance","message","message","reason","reopening_balance","transaction","transaction","transaction_id","transaction_id","BankAccountingApi","borrow","borrow_mut","clone","clone_into","deposit_in_bank_account","from","from","from_ref","into","into_request","open_bank_account","to_owned","try_from","try_into","type_id","vzip","connect","DepositInBankAccountRequest","DepositInBankAccountResponse","Event","FILE_DESCRIPTOR_SET","OpenBankAccountRequest","OpenBankAccountResponse","Transaction","amount","amount","bank_account_holder_id","bank_account_id","bank_account_id","bank_accounting_server","beneficiary_account_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","event","event","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","opening_balance","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","BankAccounting","BankAccountingServer","accept_compressed","borrow","borrow_mut","call","call","clone","clone_into","deposit_in_bank_account","fmt","from","from_arc","from_ref","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","open_bank_account","poll_ready","poll_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DepositWasRecorded","DepositWasRecorded","Event","TransferWasConfimed","TransferWasConfirmed","TransferWasDeclined","TransferWasDeclined","TransferWasReceived","TransferWasReceived","TransferWasSent","TransferWasSent","WasClosed","WasClosed","WasOpened","WasOpened","WasReopened","WasReopened","account_holder_id","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","id","initial_balance","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","merge","msg","msg","msg","msg","reason","reason","reopening_balance","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","transaction","transaction_id","transaction_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","initialize"],"q":[[0,"bank_accounting"],[7,"bank_accounting::application"],[96,"bank_accounting::domain"],[228,"bank_accounting::domain::BankAccountEvent"],[240,"bank_accounting::grpc"],[257,"bank_accounting::postgres"],[258,"bank_accounting::proto"],[386,"bank_accounting::proto::bank_accounting_server"],[416,"bank_accounting::proto::event"],[610,"bank_accounting::tracing"],[611,"core::fmt"],[612,"core::fmt"],[613,"eventually::command"],[614,"core::future::future"],[615,"alloc::boxed"],[616,"core::pin"],[617,"tonic::request"],[618,"core::result"],[619,"core::any"],[620,"core::option"],[621,"rust_decimal::decimal"],[622,"eventually::aggregate"],[623,"alloc::string"],[624,"sqlx_postgres"],[625,"anyhow"],[626,"tonic::codec::compression"],[627,"http::request"],[628,"http_body"],[629,"core::marker"],[630,"core::fmt"],[631,"axum::routing::into_make_service"],[632,"core::task::wake"],[633,"core::task::poll"],[634,"tonic::service::interceptor"],[635,"tonic::service::interceptor"],[636,"prost::encoding"],[637,"prost::encoding"],[638,"bytes::buf::buf_impl"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Event</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","","","","","","","Returns the encoded length of the message without a length …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Decodes an instance of the message from a buffer, and …","Returns the value of <code>msg</code>, or the default value if <code>msg</code> is …","Returns the value of <code>msg</code>, or the default value if <code>msg</code> is …","","","Returns the value of <code>reason</code>, or the default value if <code>reason</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,3,2,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,2,3,4,2,2,2,2,3,3,3,3,4,4,4,4,2,3,4,1,1,2,3,4,1,2,3,4,1,1,1,1,2,3,4,1,2,3,4,4,2,3,4,2,1,2,3,4,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,22,22,0,0,0,0,0,0,0,22,21,22,22,22,22,22,22,0,0,21,21,21,21,21,21,21,22,9,20,9,20,20,21,22,9,23,20,21,22,9,23,20,21,22,9,23,20,21,22,9,23,23,23,23,23,20,21,22,20,20,20,20,21,21,21,21,22,22,22,22,20,21,22,22,9,23,20,21,21,22,9,23,23,20,21,22,9,23,20,20,21,22,9,23,20,21,22,9,23,21,23,23,23,23,23,20,21,22,9,23,22,20,21,22,9,23,20,21,22,9,23,20,21,22,9,23,9,20,21,22,9,23,68,69,68,68,70,71,72,73,70,71,72,74,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,32,38,33,33,32,0,38,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,0,25,33,36,32,37,38,25,33,36,32,37,38,38,25,25,33,36,32,37,38,25,38,33,36,32,37,38,25,33,36,32,37,38,25,33,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,33,36,32,37,38,25,0,0,40,40,40,40,40,40,40,42,40,40,40,40,40,40,40,40,40,40,42,40,40,40,40,40,40,40,40,40,0,61,0,61,0,0,61,0,61,0,61,0,61,0,61,0,61,53,54,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,53,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,61,55,56,55,56,57,57,60,53,54,55,56,57,58,59,60,61,55,56,57,58,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,53,54,55,56,57,58,59,60,61,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[2,2],6],[[3,3],6],[[4,4],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[2,7],8],[[3,7],8],[[4,7],8],[-1,1,[[10,[9]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,[11,[4]]],[[14,[[13,[12]]]]]],[[1,[11,[3]]],[[14,[[13,[12]]]]]],[[1,[11,[2]]],[[14,[[13,[12]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[2,16],[3,16],[4,16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,-1,[]],0,[[[19,[9]],-1],[[17,[9,-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[21,21],[22,22],[9,9],[23,23],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[23,[[17,[5,22]]]],[[23,24],[[17,[5,22]]]],[23,-1,[]],[23,-1,[]],[[20,20],6],[[21,21],6],[[22,22],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[20,7],8],[[21,7],8],[[22,7],8],[[22,7],8],[[9,7],8],[[23,7],8],[-1,-1,[]],[-1,-1,[]],[25,21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[26,[9]]],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[21,16],[[27,28,[19,[24]]],[[17,[23,22]]]],[[23,20,[19,[29]]],[[17,[5,22]]]],[[23,30],[[17,[5,22]]]],[[23,[19,[24]]],[[17,[5,22]]]],[[23,20,[19,[29]]],[[17,[5,22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[-1,-2],5,[],[]],[[31,[15,[32]]],[[14,[[13,[12]]]]]],[-1,-1,[]],[1,31],[-1,-1,[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[[31,[15,[33]]],[[14,[[13,[12]]]]]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[[],[[35,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,5],[36,5],[32,5],[37,5],[38,5],[25,5],[33,33],[36,36],[32,32],[37,37],[38,38],[25,25],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],33],[[],36],[[],32],[[],37],[[],38],[[],25],[33,39],[36,39],[32,39],[37,39],[38,39],[25,39],[[33,33],6],[[36,36],6],[[32,32],6],[[37,37],6],[[38,38],6],[[25,25],6],0,0,[[33,7],8],[[36,7],8],[[32,7],8],[[37,7],8],[[38,7],8],[[25,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,38],[-1,-1,[]],[-1,-1,[]],[21,25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[40,[-1]],41],[[40,[-1]]],42],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1]],[43,[-2]]],-3,42,[44,45],[]],[[-1,[43,[-2]]],[],[],[]],[[[40,[-1]]],[[40,[-1]]],42],[[-1,-2],5,[],[]],[[42,[15,[32]]],[[14,[[13,[12]]]]]],[[[40,[-1]],7],8,[46,42]],[-1,-1,[]],[[[47,[-1]]],[[40,[-1]]],42],[-1,-1,[]],[-1,-2,[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[[40,[-1]],39],[[40,[-1]]],42],[[[40,[-1]],39],[[40,[-1]]],42],[-1,[[40,[-1]]],42],[[42,[15,[33]]],[[14,[[13,[12]]]]]],[[-1,49],[[50,[[17,[5]]]]],[]],[[[40,[-1]],49],[[50,[[17,[5,-2]]]]],42,[]],[[[40,[-1]],41],[[40,[-1]]],42],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[[-1,-2],[[51,[[40,[-1]],-2]]],42,52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,5],[54,5],[55,5],[56,5],[57,5],[58,5],[59,5],[60,5],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],53],[[],54],[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[61,-1],5,62],[53,39],[54,39],[55,39],[56,39],[57,39],[58,39],[59,39],[60,39],[61,39],[[53,53],6],[[54,54],6],[[55,55],6],[[56,56],6],[[57,57],6],[[58,58],6],[[59,59],6],[[60,60],6],[[61,61],6],[[53,7],8],[[54,7],8],[[55,7],8],[[56,7],8],[[57,7],8],[[58,7],8],[[59,7],8],[[60,7],8],[[61,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[[19,[61]],63,64,-1,65],[[17,[5,66]]],67],[55,16],[56,16],0,0,[57,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[35,[5]]]]],"c":[],"p":[[5,"Service",7],[5,"OpenBankAccount",7],[5,"DepositInBankAccount",7],[5,"SendTransferToBankAccount",7],[1,"tuple"],[1,"bool"],[5,"Formatter",611],[8,"Result",611],[5,"BankAccount",96],[10,"Repository",612],[8,"Envelope",613],[10,"Future",614],[5,"Box",615],[5,"Pin",616],[5,"Request",617],[1,"str"],[6,"Result",618],[5,"TypeId",619],[6,"Option",620],[5,"Transaction",96],[6,"BankAccountEvent",96],[6,"BankAccountError",96],[5,"BankAccountRoot",96],[5,"Decimal",621],[5,"Event",258],[5,"Root",622],[8,"BankAccountId",96],[8,"BankAccountHolderId",96],[5,"String",623],[8,"TransactionId",96],[5,"BankAccountingApi",240],[5,"DepositInBankAccountRequest",258],[5,"OpenBankAccountRequest",258],[8,"PgPool",624],[8,"Result",625],[5,"OpenBankAccountResponse",258],[5,"DepositInBankAccountResponse",258],[5,"Transaction",258],[1,"usize"],[5,"BankAccountingServer",386],[6,"CompressionEncoding",626],[10,"BankAccounting",386],[5,"Request",627],[10,"Body",628],[10,"Send",629],[10,"Debug",611],[5,"Arc",630],[5,"IntoMakeService",631],[5,"Context",632],[6,"Poll",633],[5,"InterceptedService",634],[10,"Interceptor",634],[5,"WasOpened",416],[5,"DepositWasRecorded",416],[5,"TransferWasSent",416],[5,"TransferWasReceived",416],[5,"TransferWasDeclined",416],[5,"TransferWasConfirmed",416],[5,"WasClosed",416],[5,"WasReopened",416],[6,"Event",416],[10,"BufMut",635],[1,"u32"],[6,"WireType",636],[5,"DecodeContext",636],[5,"DecodeError",637],[10,"Buf",638],[15,"WasOpened",228],[15,"DepositWasRecorded",228],[15,"TransferWasSent",228],[15,"TransferWasReceived",228],[15,"TransferWasDeclined",228],[15,"WasReopened",228],[15,"TransferWasConfirmed",228]],"b":[[59,"impl-Handler%3CSendTransferToBankAccount%3E-for-Service"],[60,"impl-Handler%3CDepositInBankAccount%3E-for-Service"],[61,"impl-Handler%3COpenBankAccount%3E-for-Service"],[168,"impl-Debug-for-BankAccountError"],[169,"impl-Display-for-BankAccountError"]]}],\
["eventually",{"doc":"<code>eventually</code> is a crate that helps you apply different …","t":"CCCCCCCCKPRRERPGEFMNMNNNNNNNNNNNNNNNNNCNCNNNNNNNNNMNPFGKPPPKGKNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNIRKMOOCFNNNNNNNNNPIPFEIGNNNNNNNNNNNONNNNNNOONCONNNNNNNNOGKPRKFPKKFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNFKINNNNNNNNNNOOMNNNNNNIRKRMOOFKFFFKKNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNKKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGFPIONNNNNNNNNNONNNNNNNNNNNNNNNN","n":["aggregate","command","event","message","query","serde","tracing","version","Aggregate","Domain","Error","Event","EventSourcedRepository","Id","Inner","RehydrateError","Repository","Root","aggregate_id","aggregate_id","apply","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","eq","fmt","fmt","fmt","from","from","into","into","record_new","record_that","repository","source","test","to_aggregate_type","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_name","version","Conflict","EventSourced","GetError","Getter","Internal","Internal","NotFound","Repository","SaveError","Saver","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","into","into","into","save","save","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Scenario","borrow","borrow_mut","clone","clone_into","default","from","given","into","new","to_owned","try_from","try_into","type_id","when","Envelope","Error","Handler","handle","message","metadata","test","Scenario","borrow","borrow_mut","from","given","into","try_from","try_into","type_id","when","All","Envelope","From","Persisted","Store","Stream","VersionSelect","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","eq","eq","event","fmt","fmt","from","from","into","into","message","metadata","serialize","store","stream_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","AppendError","Appender","Conflict","Error","EventStoreExt","InMemory","Internal","Store","Streamer","Tracking","append","append","append","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","recorded_events","reset_recorded_events","source","stream","stream","stream","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_recorded_events_tracking","Envelope","Message","Metadata","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","from","into","message","metadata","name","serialize","to_owned","try_from","try_into","type_id","with_metadata","Envelope","Error","Handler","Output","handle","message","metadata","Convert","Deserializer","Json","ProtoJson","Protobuf","Serde","Serializer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","from","from","from","from","into","into","into","into","new","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AggregateRepositoryExt","EventStoreExt","InstrumentedAggregateRepository","InstrumentedEventStore","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","get","into","into","save","stream","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_tracing","with_tracing","Any","Check","ConflictError","MustBe","Version","actual","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","expected","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"eventually"],[8,"eventually::aggregate"],[52,"eventually::aggregate::repository"],[103,"eventually::aggregate::test"],[118,"eventually::command"],[125,"eventually::command::test"],[135,"eventually::event"],[174,"eventually::event::store"],[229,"eventually::message"],[251,"eventually::query"],[258,"eventually::serde"],[321,"eventually::tracing"],[353,"eventually::version"],[386,"core::marker"],[387,"core::marker"],[388,"core::option"],[389,"core::result"],[390,"core::cmp"],[391,"core::fmt"],[392,"core::fmt"],[393,"core::convert"],[394,"alloc::string"],[395,"core::any"],[396,"anyhow"],[397,"core::future::future"],[398,"alloc::boxed"],[399,"core::pin"],[400,"alloc::vec"],[401,"core::ops::function"],[402,"serde::de"],[403,"serde::de"],[404,"serde::ser"],[405,"prost::message"],[406,"core::default"],[407,"anyhow"]],"d":["Module containing support for the Aggregate pattern.","Module containing support for Domain [Command]s.","Module <code>event</code> contains types and abstractions helpful for …","This module contains the definition of a Message type, …","Module <code>query</code> contains types and helpful abstractions to …","This module provides traits and implementations for …","Module containing some extension traits to support code …","Contains the types necessary for Optimistic Locking …","An Aggregate represents a Domain Model that, through an …","Error returned during rehydration when the Aggregate Root …","The error type that can be returned by <code>Aggregate::apply</code> …","The type of Domain Events that interest this Aggregate. …","","The type used to uniquely identify the Aggregate.","This error is returned by Root::rehydrate_async when the …","List of possible errors that can be returned by …","","An Aggregate Root represents the Domain Entity object used …","Returns the unique identifier for the Aggregate instance.","Returns the unique identifier of the Aggregate.","Mutates the state of an Aggregate through a Domain Event.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new Aggregate Root instance by applying the …","Records a change to the Aggregate Root, expressed by the …","Module containing the definition of a Repository, to fetch …","","Module exposing a Scenario type to test Aggregates using …","Maps the Aggregate value contained within Root to a …","","","","","","","","","A unique name identifier for this Aggregate type.","Returns the current version for the Aggregate.","Error returned when Saver::save encounters a conflict …","An Event-sourced implementation of the Repository …","All possible errors returned by <code>Getter::get</code>.","Trait used to implement read access to a data store from …","Error returned when the Getter implementation has …","Error returned when the Saver implementation has …","Error returned when the Aggregate Root could not be found …","A Repository is an object that allows to load and save an …","All possible errors returned by <code>Saver::save</code>.","Trait used to implement write access to a data store, …","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Loads an aggregate::Root instance from the data store, …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Saves a new version of an aggregate::Root instance to the …","","","","","","","","","","","","","","","","A test scenario that can be used to test an Aggregate and …","","","","","","Returns the argument unchanged.","Specifies the precondition for the test Scenario.","Calls <code>U::from(self)</code>.","Creates a new Scenario instance.","","","","","Specifies the action/mutation to execute in this Scenario.","A Command represents an intent by an Actor (e.g. a User, …","The error type returned by the Handler while handling a […","A software component that is able to handle [Command]s of …","Handles a [Command] and returns an error if the handling …","The message payload.","Optional metadata to provide additional context to the …","Module exposing a test Scenario type to write Domain …","A test scenario that can be used to test a Command Handler …","","","Returns the argument unchanged.","Sets the precondition state of the system for the Scenario…","Calls <code>U::from(self)</code>.","","","","Specifies the Command to test in the Scenario, in the …","Selects all Events in the Event Stream.","An Event is a Message carring the information about a …","Selects all Events in the Event Stream starting from the […","An [Event] that has been persisted to the Event Store.","","Stream is a stream of Persisted Domain Events.","Specifies the slice of the Event Stream to select when …","","","","","","","","","","","","The actual Domain Event carried by this envelope.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The message payload.","Optional metadata to provide additional context to the …","","Contains implementations of the <code>event::Store</code> trait and …","The id of the Event Stream the persisted Event belongs to.","","","","","","","","","The version of the Event Stream when this Event has been …","All possible error types returned by <code>Appender::append</code>.","Interface used to append new Domain Events in an Event …","Error returned when Appender::append encounters a conflict …","The error type returned by the Store during a [<code>stream</code>] …","Extension trait that can be used to pull in supertypes …","In-memory implementation of <code>event::Store</code> trait, backed by …","Error returned when the Appender implementation has …","An Event Store, used to store Domain Events in Event …","Interface used to stream Persisted Domain Events from an …","Decorator type for an <code>event::Store</code> implementation that …","Appens new Domain Events to the specified Event Stream.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the list of recoded Domain Events through this …","Resets the list of recorded Domain Events through this …","","Opens an Event Stream, effectively streaming all Domain …","","","","","","","","","","","","","","","Returns a <code>Tracking</code> instance that decorates the original …","Represents a Message packaged for persistance and/or …","Represents a piece of domain data that occurs in the …","Optional metadata to attach to an Envelope to provide …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The message payload.","Optional metadata to provide additional context to the …","Returns the domain name of the Message.","","","","","","Adds a new entry in the Envelope’s Metadata.","A Message carrying the Domain Query itself as payload and …","The error type returned by the Handler when Query …","An Handler describes an implementation that is able to …","The result type the Handler produces when evaluating a …","Evaluates the Query provided and returns a result type, …","The message payload.","Optional metadata to provide additional context to the …","Implements the Serde trait to translate between two …","A deserializer interface that can be used to deserialize a …","Implements the Serializer and Deserializer traits, which …","Implementation of Serde traits that uses ProtoJson as wire …","Implements the Serde trait  which serializes and …","Serializer and Deserializer that can be used to serialize …","A serializer interface that can be used to serialize a …","","","","","","","","","","","","","","","","","","","","Deserializes the given value from a message encoded in the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new Convert serde instance.","Serializes the given value into the protocol supported by …","","","","","","","","","","","","","","","","","","","","","Extension trait for any <code>aggregate::Repository</code> type to …","Extension trait for any <code>event::Store</code> type to provide …","<code>aggregate::Repository</code> type wrapper that provides …","<code>event::Store</code> type wrapper that provides instrumentation …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns an instrumented version of the …","Returns an instrumented version of the <code>event::Store</code> …","Disables any kind of optimistic locking check, allowing …","Used to set a specific expectation during an operation …","This error is returned by a function when a version …","Expects that the previous Version used for the operation …","A version used for Optimistic Locking.","The actual Version value, which mismatch caused this error.","","","","","","","","","","","The Version value that was expected when calling the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,18,4,4,0,4,18,0,0,0,4,9,4,9,18,9,18,9,9,9,9,9,18,18,9,18,9,18,9,9,0,18,0,9,9,18,9,18,9,18,9,18,4,9,30,0,0,0,29,30,29,0,0,0,29,30,27,29,30,27,27,27,29,29,30,30,27,29,29,30,30,30,27,27,33,27,29,30,27,37,27,29,30,27,29,30,29,30,27,29,30,27,29,30,27,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,42,0,42,43,43,0,0,44,44,44,44,44,44,44,44,44,46,0,46,0,0,0,0,45,46,45,46,45,46,45,46,45,45,46,45,45,46,45,46,45,46,20,20,45,0,45,45,46,45,46,45,46,45,46,45,0,0,57,58,0,0,57,0,0,0,51,53,56,57,53,56,57,53,56,53,56,53,56,53,57,57,53,56,57,57,57,53,56,57,53,56,56,56,57,58,53,56,53,56,57,57,53,56,57,53,56,57,53,56,60,0,0,0,61,61,61,61,61,61,61,61,61,61,61,61,7,61,61,61,61,61,61,0,62,0,62,62,63,63,0,0,0,0,0,0,0,64,66,67,70,64,66,67,70,64,66,67,70,64,66,67,70,66,67,70,71,64,66,67,70,66,67,64,66,67,70,64,66,67,70,64,76,64,66,67,70,64,66,67,70,64,66,67,70,64,66,67,70,64,66,67,70,0,0,0,0,77,78,77,78,77,78,77,78,77,78,77,78,77,78,78,77,78,77,78,77,78,77,78,77,78,77,80,81,52,0,0,52,0,32,52,32,52,32,52,32,52,32,52,32,32,52,32,32,52,32,52,32,52,32,32,52,32,52,32,52,32],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[4,[],[[1,[-1]],[2,[-2]],[3,[-3]]]]],-1,[5,6],[7,5,6,8],[5,6]],[[[9,[-1]]],[],4],[[[10,[[4,[],[[1,[-1]],[2,[-2]],[3,[-3]]]]]],-2],[[11,[[4,[],[[1,[-1]],[2,[-2]],[3,[-3]]]],-3]]],[5,6],[7,5,6,8],[5,6]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[-1]]],[4,8]],[[-1,-2],12,[],[]],[[[9,[-1]]],-2,4,[]],[[[9,[-1]],[9,[-1]]],13,[4,14]],[[[9,[-1]],15],16,[4,17]],[[[18,[-1,-2]],15],16,17,17],[[[18,[-1,-2]],15],16,19,19],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[11,[[9,[-1]]]]],4],[[[9,[-1]],20],[[11,[12]]],4],0,[[[18,[-1,-2]]],[[10,[21]]],21,21],0,[[[9,[-1]]],-2,4,[[22,[-1]]]],[-1,-2,[],[]],[-1,23,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[],25],[[[9,[-1]]],26,4],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,-2]]],[[27,[-1,-2]]],[4,8],[28,8]],[[-1,-2],12,[],[]],[[29,15],16],[[29,15],16],[[30,15],16],[[30,15],16],[[[27,[-1,-2]],15],16,[4,17],[28,17]],[-1,-1,[]],[31,29],[31,30],[-1,-1,[]],[32,30],[-1,[[27,[-2,-1]]],28,4],[-1,-1,[]],[33,[[36,[[35,[34]]]]]],[[[27,[-1,-2]]],[[36,[[35,[34]]]]],4,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[37,[9,[-1]]],[[36,[[35,[34]]]]],4],[[[27,[-1,-2]],[9,[-1]]],[[36,[[35,[34]]]]],4,28],[29,[[10,[21]]]],[30,[[10,[21]]]],[-1,-2,[],[]],[-1,23,[]],[-1,23,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[38,[-1]]],[4,8]],[[-1,-2],12,[],[]],[[],[[38,[-1]]],4],[-1,-1,[]],[[[38,[-1]],[39,[20]]],[[0,[-1]]],4],[-1,-2,[],[]],[[],[[38,[-1]]],4],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[[[38,[-1]],-4],[[0,[-1,-2,-4,-3]]],4,[[22,[[9,[-1]]]]],[],[[41,[],[[40,[[11,[-2,-3]]]]]]]],0,0,0,[[[42,[],[[3,[-1]]]],[43,[-2]]],[[36,[[35,[34]]]]],[5,6],7],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[44,[39,[[45,[-1,-2]]]]],[[0,[-1,-2]]],[],7],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[[44,[43,[-1]]],[[0,[-2,-3,-1]]],7,[],7],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[45,[-1,-2]]],[[45,[-1,-2]]],8,[7,8]],[46,46],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[-1,[[11,[[45,[-2,-3]]]]],47,48,[7,48]],[[[45,[-1,-2]],[45,[-1,-2]]],13,14,[7,14]],[[46,46],13],0,[[[45,[-1,-2]],15],16,17,[7,17]],[[46,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[45,[-1,-2]],-3],11,49,[7,49],50],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,[[51,-1,52,[39,[[20,[-2]]]]],[[36,[[35,[34]]]]],[5,6],[7,5,6]],[[[53,[-1,-2]],-1,52,[39,[[20,[-2]]]]],[[36,[[35,[34]]]]],[8,54,55,5,6],[7,8,5,6]],[[[56,[-3,-1,-2]],-1,52,[39,[[20,[-2]]]]],[[36,[[35,[34]]]]],[8,5,6],[7,8,5,6],[[28,[-1,-2]],5,6]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-1,-2]]],[[53,[-1,-2]]],8,[7,8]],[[[56,[-3,-1,-2]]],[[56,[-3,-1,-2]]],[5,6,8],[7,5,6,8],[[28,[-1,-2]],5,6,8]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[],[[53,[-1,-2]]],[],7],[[57,15],16],[[57,15],16],[[[53,[-1,-2]],15],16,17,[7,17]],[[[56,[-3,-1,-2]],15],16,[5,6,17],[7,5,6,17],[[28,[-1,-2]],5,6,17]],[32,57],[-1,-1,[]],[31,57],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-3,-1,-2]]],[[39,[[45,[-1,-2]]]]],[8,5,6],[7,8,5,6],[[28,[-1,-2]],5,6]],[[[56,[-3,-1,-2]]],12,[8,5,6],[7,8,5,6],[[28,[-1,-2]],5,6]],[57,[[10,[21]]]],[[[58,[],[[3,[-1]]]],-2,46],[[59,[-2,-3,-1]]],[5,6],[5,6],[7,5,6]],[[[53,[-1,-2]],-1,46],[[59,[-1,-2,-3]]],[8,54,55,5,6],[7,8,5,6],[]],[[[56,[-3,-1,-2]],-1,46],[[59,[-1,-2,-4]]],[8,5,6],[7,8,5,6],[[28,[-1,-2]],5,6],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[60,[[56,[60,-1,-2]]],[8,5,6],[7,8,5,6]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[61,[-1]]],[[61,[-1]]],[7,8]],[[-1,-2],12,[],[]],[-1,[[11,[[61,[-2]]]]],47,[7,48]],[[[61,[-1]],[61,[-1]]],13,[7,14]],[[[61,[-1]],15],16,[7,17]],[-1,[[61,[-1]]],7],[-1,-1,[]],[-1,-2,[],[]],0,0,[7,25],[[[61,[-1]],-2],11,[7,49],50],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[[[61,[-1]],23,23],[[61,[-1]]],7],0,0,0,0,[[[62,[],[[40,[-1]],[3,[-2]]]],[63,[-3]]],[[36,[[35,[34]]]]],[5,6],[5,6],[7,5,6]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[64,[-1,-2,-3]]],[[64,[-1,-2,-3]]],[5,6,8],[5,6,8],[[65,[-2]],5,6,8]],[[[66,[-1]]],[[66,[-1]]],[49,5,6,48,8]],[[[67,[-1]]],[[67,[-1]]],[68,69,8]],[[[70,[-1]]],[[70,[-1]]],[68,49,69,48,8]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[],[[66,[-1]]],[49,5,6,48]],[[],[[67,[-1]]],[68,69,69]],[[],[[70,[-1]]],[68,49,69,48,69]],[[71,[73,[72]]],[[74,[-1]]],[]],[[[64,[-1,-2,-3]],[73,[72]]],[[74,[-1]]],[],[[75,[-1]],5,6],[[65,[-2]],5,6]],[[[66,[-1]],[73,[72]]],[[74,[-1]]],[49,5,6,48]],[[[67,[-1]],[73,[72]]],[[74,[-1]]],[68,69]],[[[70,[-1]],[73,[72]]],[[74,[-1]]],[68,49,69,48]],[[[66,[-1]],15],16,[49,5,6,48,17]],[[[67,[-1]],15],16,[68,69,17]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[64,[-3,-1,-2]]],[5,6],[[65,[-1]],5,6],[5,6]],[[76,-1],[[74,[[39,[72]]]]],[]],[[[64,[-1,-2,-3]],-1],[[74,[[39,[72]]]]],[],[[75,[-1]],5,6],[[65,[-2]],5,6]],[[[66,[-1]],-1],[[74,[[39,[72]]]]],[49,5,6,48]],[[[67,[-1]],-1],[[74,[[39,[72]]]]],[68,69]],[[[70,[-1]],-1],[[74,[[39,[72]]]]],[68,49,69,48]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,[[[77,[-3,-1,-2]],-1,52,[39,[[20,[-2]]]]],[[36,[[35,[34]]]]],[17,5,6],[7,17,5,6],[[28,[-1,-2]],5,6]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1,-2]]],[[78,[-1,-2]]],[4,17,8],[[79,[-1]],8]],[[[77,[-3,-1,-2]]],[[77,[-3,-1,-2]]],[17,5,6,8],[7,17,5,6,8],[[28,[-1,-2]],5,6,8]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[[78,[-1,-2]],15],16,[4,17,17],[[79,[-1]],17]],[[[77,[-3,-1,-2]],15],16,[17,5,6,17],[7,17,5,6,17],[[28,[-1,-2]],5,6,17]],[-1,-1,[]],[-1,-1,[]],[[[78,[-1,-2]]],[[36,[[35,[34]]]]],[4,17],[[79,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1,-2]],[9,[-1]]],[[36,[[35,[34]]]]],[4,17],[[79,[-1]]]],[[[77,[-3,-1,-2]],-1,46],[[59,[-1,-2,-4]]],[17,5,6],[7,17,5,6],[[28,[-1,-2]],5,6],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[80,[[78,[-1,80]]],[4,17]],[81,[[77,[81,-1,-2]]],[17,5,6],[7,17,5,6]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[32,32],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[52,52],13],[[32,32],13],0,[[52,15],16],[[32,15],16],[[32,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]]],"c":[],"p":[[17,"Id"],[17,"Event"],[17,"Error"],[10,"Aggregate",8],[10,"Send",386],[10,"Sync",386],[10,"Message",229],[10,"Clone",387],[5,"Root",8],[6,"Option",388],[6,"Result",389],[1,"tuple"],[1,"bool"],[10,"PartialEq",390],[5,"Formatter",391],[8,"Result",391],[10,"Debug",391],[6,"RehydrateError",8],[10,"Display",391],[8,"Envelope",135],[10,"Error",392],[10,"From",393],[5,"String",394],[5,"TypeId",395],[1,"str"],[8,"Version",353],[5,"EventSourced",52],[10,"Store",174],[6,"GetError",52],[6,"SaveError",52],[5,"Error",396],[5,"ConflictError",353],[10,"Getter",52],[10,"Future",397],[5,"Box",398],[5,"Pin",399],[10,"Saver",52],[5,"Scenario",103],[5,"Vec",400],[17,"Output"],[10,"Fn",401],[10,"Handler",118],[8,"Envelope",118],[5,"Scenario",125],[5,"Persisted",135],[6,"VersionSelect",135],[10,"Deserializer",402],[10,"Deserialize",402],[10,"Serialize",403],[10,"Serializer",403],[10,"Appender",174],[6,"Check",353],[5,"InMemory",174],[10,"Eq",390],[10,"Hash",404],[5,"Tracking",174],[6,"AppendError",174],[10,"Streamer",174],[8,"Stream",135],[10,"EventStoreExt",174],[5,"Envelope",229],[10,"Handler",251],[8,"Envelope",251],[5,"Convert",258],[10,"Serde",258],[5,"Json",258],[5,"Protobuf",258],[10,"Message",405],[10,"Default",406],[5,"ProtoJson",258],[10,"Deserializer",258],[1,"u8"],[1,"slice"],[8,"Result",396],[10,"TryFrom",393],[10,"Serializer",258],[5,"InstrumentedEventStore",321],[5,"InstrumentedAggregateRepository",321],[10,"Repository",52],[10,"AggregateRepositoryExt",321],[10,"EventStoreExt",321]],"b":[[30,"impl-Debug-for-RehydrateError%3CT,+I%3E"],[31,"impl-Display-for-RehydrateError%3CT,+I%3E"],[70,"impl-Display-for-GetError"],[71,"impl-Debug-for-GetError"],[72,"impl-Debug-for-SaveError"],[73,"impl-Display-for-SaveError"],[77,"impl-From%3CError%3E-for-SaveError"],[79,"impl-From%3CConflictError%3E-for-SaveError"],[198,"impl-Display-for-AppendError"],[199,"impl-Debug-for-AppendError"],[202,"impl-From%3CConflictError%3E-for-AppendError"],[204,"impl-From%3CError%3E-for-AppendError"],[371,"impl-Display-for-ConflictError"],[372,"impl-Debug-for-ConflictError"]]}],\
["eventually_macros",{"doc":"<code>eventually-macros</code> contains useful macros that provides …","t":"X","n":["aggregate_root"],"q":[[0,"eventually_macros"]],"d":["Implements a newtype to use the <code>eventually::aggregate::Root</code>…"],"i":[0],"f":[0],"c":[],"p":[],"b":[]}],\
["eventually_postgres",{"doc":"<code>eventually-postgres</code> contains different implementations of …","t":"CCFNNNNNNNNNNNNNNNPPPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNOO","n":["aggregate","event","Repository","borrow","borrow_mut","clone","clone_into","fmt","from","get","into","new","save","to_owned","try_from","try_into","type_id","vzip","Database","DeserializeEvent","ReadColumn","Store","StreamError","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","from","from","into","into","new","source","stream","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","name"],"q":[[0,"eventually_postgres"],[2,"eventually_postgres::aggregate"],[18,"eventually_postgres::event"],[50,"eventually_postgres::event::StreamError"],[52,"eventually::aggregate"],[53,"core::clone"],[54,"eventually::serde"],[55,"core::fmt"],[56,"core::fmt"],[57,"alloc::boxed"],[58,"core::pin"],[59,"core::marker"],[60,"core::marker"],[61,"sqlx_core::migrate::error"],[62,"core::result"],[63,"eventually::aggregate"],[64,"eventually::version"],[65,"eventually::event"],[66,"alloc::vec"],[67,"alloc::string"],[68,"eventually::message"],[69,"core::error"],[70,"core::option"],[71,"eventually::event"]],"d":["This module contains the implementation of the …","","Implements the <code>eventually::aggregate::Repository</code> trait for …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Runs the latest migrations necessary for the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Runs the latest migrations necessary for the …","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,25,25,25,0,0,19,25,19,25,19,19,19,25,25,19,25,19,25,19,19,25,19,19,25,25,19,25,19,25,19,25,19,31,31],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2,-3]]],[[1,[-1,-2,-3]]],[2,3],[[4,[-1]],3],[4,3]],[[-1,-2],5,[],[]],[[[1,[-1,-2,-3]],6],7,[2,8],[[4,[-1]],8],[4,8]],[-1,-1,[]],[[[1,[-1,-2,-3]]],[[11,[[10,[9]]]]],[2,12,13],[[4,[-1]],12,13],[4,12,13]],[-1,-2,[],[]],[[14,-2,-3],[[16,[[1,[-1,-2,-3]],15]]],2,[[4,[-1]]],4],[[[1,[-1,-2,-3]],[17,[-1]]],[[11,[[10,[9]]]]],[2,12,13],[[4,[-1]],12,13],[4,12,13]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,[[[19,[-1,-2,-3]],-1,20,[22,[[21,[-2]]]]],[[11,[[10,[9]]]]],[23,3,12,13],[24,12,13],[[4,[-2]],12,13]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1,-2,-3]]],[[19,[-1,-2,-3]]],[23,3,3],3,[[4,[-2]],3]],[[-1,-2],5,[],[]],[[25,6],7],[[25,6],7],[[[19,[-1,-2,-3]],6],7,[23,3,8],8,[[4,[-2]],8]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,-2],[[16,[[19,[-3,-1,-2]],15]]],[],[[4,[-1]]],[23,3]],[25,[[27,[26]]]],[[[19,[-1,-2,-3]],-1,28],[[29,[-1,-2,-4]]],[23,3,12,13],[24,12,13],[[4,[-2]],12,13],[]],[-1,-2,[],[]],[-1,30,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[5,"Repository",2],[10,"Aggregate",52],[10,"Clone",53],[10,"Serde",54],[1,"tuple"],[5,"Formatter",55],[8,"Result",55],[10,"Debug",55],[10,"Future",56],[5,"Box",57],[5,"Pin",58],[10,"Send",59],[10,"Sync",59],[8,"PgPool",60],[6,"MigrateError",61],[6,"Result",62],[5,"Root",52],[5,"TypeId",63],[5,"Store",18],[6,"Check",64],[8,"Envelope",65],[5,"Vec",66],[10,"ToString",67],[10,"Message",68],[6,"StreamError",18],[10,"Error",69],[6,"Option",70],[6,"VersionSelect",65],[8,"Stream",65],[5,"String",67],[15,"ReadColumn",50]],"b":[[30,"impl-Display-for-StreamError"],[31,"impl-Debug-for-StreamError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
