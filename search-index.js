var searchIndex = JSON.parse('{\
"bank_accounting":{"doc":"","t":[0,0,0,0,3,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,4,6,6,6,3,13,13,13,13,13,13,13,13,3,6,13,13,13,13,13,13,13,13,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,3,3,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11],"n":["application","domain","grpc","proto","DepositInBankAccount","OpenBankAccount","SendTransferToBankAccount","Service","amount","bank_account_holder_id","bank_account_id","bank_account_id","bank_account_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","handle","handle","handle","into","into","into","into","into_request","into_request","into_request","into_request","message","name","name","name","ne","ne","ne","opening_balance","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AlreadyClosed","AlreadyOpened","BankAccount","BankAccountError","BankAccountEvent","BankAccountHolderId","BankAccountId","BankAccountRepository","BankAccountRoot","Closed","DepositWasRecorded","EmptyAccountHolderId","EmptyAccountId","InsufficientFunds","NegativeDepositAttempted","NoMoneyDeposited","NotOpenedYet","Transaction","TransactionId","TransferWasConfirmed","TransferWasDeclined","TransferWasReceived","TransferWasSent","WasClosed","WasOpened","WasReopened","WrongTransactionRecipient","aggregate_id","amount","apply","beneficiary_account_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","deposit","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","name","ne","ne","ne","open","receive_transfer","record_transfer_success","reopen","send_transfer","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","account_holder_id","amount","id","initial_balance","message","message","reason","reopening_balance","transaction","transaction","transaction_id","transaction_id","BankAccountingApi","borrow","borrow_mut","clone","clone_into","deposit_in_bank_account","from","from","into","into_request","open_bank_account","to_owned","try_from","try_into","type_id","vzip","DepositInBankAccountRequest","DepositInBankAccountResponse","FILE_DESCRIPTOR_SET","OpenBankAccountRequest","OpenBankAccountResponse","amount","bank_account_holder_id","bank_account_id","bank_account_id","bank_accounting_server","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","ne","ne","opening_balance","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BankAccounting","BankAccountingServer","accept_gzip","borrow","borrow_mut","call","call","clone","clone_into","deposit_in_bank_account","fmt","from","into","into_request","new","open_bank_account","poll_ready","poll_ready","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["bank_accounting","","","","bank_accounting::application","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bank_accounting::domain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bank_accounting::domain::BankAccountError","bank_accounting::domain::BankAccountEvent","","","","","","","","","","","","bank_accounting::grpc","","","","","","","","","","","","","","","","bank_accounting::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bank_accounting::proto::bank_accounting_server","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be â€¦","","Enable decompressing requests with <code>gzip</code>.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Compress responses with <code>gzip</code>, if the client supports it.","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,2,1,3,2,1,3,2,1,3,4,4,4,2,1,3,4,4,4,4,2,1,3,4,2,1,3,3,2,1,3,2,1,3,2,4,2,1,3,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,5,5,0,0,0,0,0,0,0,5,6,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,5,7,8,7,8,8,6,5,7,9,9,8,6,5,7,9,9,8,6,5,7,9,8,6,5,7,9,9,9,8,6,5,8,6,5,8,6,5,5,7,9,8,6,5,7,9,9,8,8,6,5,7,9,8,6,5,7,9,6,8,6,5,9,9,9,9,9,8,6,5,7,9,5,8,6,5,7,9,8,6,5,7,9,8,6,5,7,9,8,6,5,7,9,10,11,12,11,11,13,14,15,16,13,14,15,17,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,19,20,20,19,0,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,19,20,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,0,0,23,23,23,23,23,23,23,24,23,23,23,23,23,24,23,23,23,23,23,23,23,23,23],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["service",3,[["clone",8]]]],["service",3,[["clone",8]]]],[[["openbankaccount",3]],["openbankaccount",3]],[[["depositinbankaccount",3]],["depositinbankaccount",3]],[[["sendtransfertobankaccount",3]],["sendtransfertobankaccount",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["openbankaccount",3],["openbankaccount",3]],["bool",0]],[[["depositinbankaccount",3],["depositinbankaccount",3]],["bool",0]],[[["sendtransfertobankaccount",3],["sendtransfertobankaccount",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["openbankaccount",3],["formatter",3]],["result",6]],[[["depositinbankaccount",3],["formatter",3]],["result",6]],[[["sendtransfertobankaccount",3],["formatter",3]],["result",6]],[[]],[[["never",0]]],[[],["service",3]],[[]],[[]],[[]],[[["service",3],["envelope",6,[["openbankaccount",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["service",3],["envelope",6,[["sendtransfertobankaccount",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["service",3],["envelope",6,[["depositinbankaccount",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[["openbankaccount",3]],["str",0]],[[["depositinbankaccount",3]],["str",0]],[[["sendtransfertobankaccount",3]],["str",0]],[[["openbankaccount",3],["openbankaccount",3]],["bool",0]],[[["depositinbankaccount",3],["depositinbankaccount",3]],["bool",0]],[[["sendtransfertobankaccount",3],["sendtransfertobankaccount",3]],["bool",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bankaccount",3]]],null,[[["option",4,[["bankaccount",3]]]],["result",4,[["bankaccount",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bankaccountroot",3]],["context",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bankaccountroot",3]],["context",3]],[[["",0]],["",0]],[[["transaction",3]],["transaction",3]],[[["bankaccountevent",4]],["bankaccountevent",4]],[[["bankaccounterror",4]],["bankaccounterror",4]],[[["bankaccount",3]],["bankaccount",3]],[[["bankaccountroot",3]],["bankaccountroot",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["bankaccountroot",3]],["result",4,[["bankaccounterror",4]]]],[[["bankaccountroot",3],["decimal",3]],["result",4,[["bankaccounterror",4]]]],[[["transaction",3],["transaction",3]],["bool",0]],[[["bankaccountevent",4],["bankaccountevent",4]],["bool",0]],[[["bankaccounterror",4],["bankaccounterror",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["transaction",3],["formatter",3]],["result",6]],[[["bankaccountevent",4],["formatter",3]],["result",6]],[[["bankaccounterror",4],["formatter",3]],["result",6]],[[["bankaccounterror",4],["formatter",3]],["result",6]],[[["bankaccount",3],["formatter",3]],["result",6]],[[["bankaccountroot",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["context",3,[["bankaccount",3]]]],["bankaccountroot",3]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["bankaccountevent",4]],["str",0]],[[["transaction",3],["transaction",3]],["bool",0]],[[["bankaccountevent",4],["bankaccountevent",4]],["bool",0]],[[["bankaccounterror",4],["bankaccounterror",4]],["bool",0]],[[["bankaccountid",6],["bankaccountholderid",6],["option",4,[["decimal",3]]]],["result",4,[["bankaccountroot",3],["bankaccounterror",4]]]],[[["bankaccountroot",3],["transaction",3],["option",4,[["string",3]]]],["result",4,[["bankaccounterror",4]]]],[[["bankaccountroot",3],["transactionid",6]],["result",4,[["bankaccounterror",4]]]],[[["bankaccountroot",3],["option",4,[["decimal",3]]]],["result",4,[["bankaccounterror",4]]]],[[["bankaccountroot",3],["transaction",3],["option",4,[["string",3]]]],["result",4,[["bankaccounterror",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["bankaccountingapi",3,[["clone",8]]]],["bankaccountingapi",3,[["clone",8]]]],[[["",0],["",0]]],[[["bankaccountingapi",3],["request",3,[["depositinbankaccountrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["service",3]],["bankaccountingapi",3]],[[]],[[]],[[],["request",3]],[[["bankaccountingapi",3],["request",3,[["openbankaccountrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["openbankaccountrequest",3]]],[[["openbankaccountresponse",3]]],[[["depositinbankaccountrequest",3]]],[[["depositinbankaccountresponse",3]]],[[["openbankaccountrequest",3]],["openbankaccountrequest",3]],[[["openbankaccountresponse",3]],["openbankaccountresponse",3]],[[["depositinbankaccountrequest",3]],["depositinbankaccountrequest",3]],[[["depositinbankaccountresponse",3]],["depositinbankaccountresponse",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["openbankaccountrequest",3]],[[],["openbankaccountresponse",3]],[[],["depositinbankaccountrequest",3]],[[],["depositinbankaccountresponse",3]],[[["openbankaccountrequest",3]],["usize",0]],[[["openbankaccountresponse",3]],["usize",0]],[[["depositinbankaccountrequest",3]],["usize",0]],[[["depositinbankaccountresponse",3]],["usize",0]],[[["openbankaccountrequest",3],["openbankaccountrequest",3]],["bool",0]],[[["openbankaccountresponse",3],["openbankaccountresponse",3]],["bool",0]],[[["depositinbankaccountrequest",3],["depositinbankaccountrequest",3]],["bool",0]],[[["depositinbankaccountresponse",3],["depositinbankaccountresponse",3]],["bool",0]],[[["openbankaccountrequest",3],["formatter",3]],["result",6]],[[["openbankaccountresponse",3],["formatter",3]],["result",6]],[[["depositinbankaccountrequest",3],["formatter",3]],["result",6]],[[["depositinbankaccountresponse",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["openbankaccountrequest",3],["openbankaccountrequest",3]],["bool",0]],[[["depositinbankaccountrequest",3],["depositinbankaccountrequest",3]],["bool",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,[[["bankaccountingserver",3,[["bankaccounting",8]]]],["bankaccountingserver",3,[["bankaccounting",8]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bankaccountingserver",3],["request",3]]],[[["",0],["request",3]]],[[["bankaccountingserver",3,[["bankaccounting",8]]]],["bankaccountingserver",3,[["bankaccounting",8]]]],[[["",0],["",0]]],[[["",0],["request",3,[["depositinbankaccountrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["bankaccountingserver",3,[["",26,[["debug",8],["bankaccounting",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[["bankaccounting",8]],["bankaccountingserver",3,[["bankaccounting",8]]]],[[["",0],["request",3,[["openbankaccountrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["bankaccountingserver",3],["context",3]],["poll",4,[["result",4]]]],[[["bankaccountingserver",3,[["bankaccounting",8]]]],["bankaccountingserver",3,[["bankaccounting",8]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["bankaccounting",8]],["interceptedservice",3,[["bankaccountingserver",3,[["bankaccounting",8]]]]]]],"p":[[3,"DepositInBankAccount"],[3,"OpenBankAccount"],[3,"SendTransferToBankAccount"],[3,"Service"],[4,"BankAccountError"],[4,"BankAccountEvent"],[3,"BankAccount"],[3,"Transaction"],[3,"BankAccountRoot"],[13,"WrongTransactionRecipient"],[13,"WasOpened"],[13,"DepositWasRecorded"],[13,"TransferWasSent"],[13,"TransferWasReceived"],[13,"TransferWasDeclined"],[13,"WasReopened"],[13,"TransferWasConfirmed"],[3,"BankAccountingApi"],[3,"DepositInBankAccountRequest"],[3,"OpenBankAccountRequest"],[3,"OpenBankAccountResponse"],[3,"DepositInBankAccountResponse"],[3,"BankAccountingServer"],[8,"BankAccounting"]]},\
"eventually":{"doc":"","t":[0,0,0,0,0,0,8,13,13,3,16,16,16,3,4,3,16,13,8,8,13,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,6,16,8,10,13,13,16,6,16,13,13,3,8,6,16,16,4,4,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,8,6,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["aggregate","command","event","message","test","version","Aggregate","AggregateRootNotFound","AppendToStore","Context","Error","Error","Event","EventSourced","EventSourcedError","EventSourcedRepository","Id","RehydrateAggregate","Repository","Root","StreamFromStore","aggregate_id","aggregate_id","aggregate_id","apply","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get","into","into","into","record_new","record_new","record_that","record_that","source","state","state","store","store","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","0","0","0","Envelope","Error","Handler","handle","All","Any","AppendError","Envelope","Event","From","MustBe","Persisted","Store","Stream","StreamError","StreamId","StreamVersionExpected","VersionSelect","append","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","eq","eq","eq","event","fmt","fmt","fmt","from","from","from","into","into","into","ne","ne","ne","serialize","stream","stream_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","0","0","Envelope","Message","Metadata","and_metadata","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","from","from","into","message","metadata","name","serialize","to_owned","try_from","try_into","type_id","command_handler","store","Scenario","borrow","borrow_mut","from","given","into","try_from","try_into","type_id","when","EventStoreExt","InMemory","Tracking","append","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","into","into","recorded_events","reset_recorded_events","stream","stream","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_recorded_events_tracking","ConflictError","Version","actual","borrow","borrow_mut","clone","clone_into","eq","expected","fmt","fmt","from","into","ne","to_owned","to_string","try_from","try_into","type_id"],"q":["eventually","","","","","","eventually::aggregate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::aggregate::EventSourcedError","","","eventually::command","","","","eventually::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::event::StreamVersionExpected","eventually::event::VersionSelect","eventually::message","","","","","","","","","","","","","","","","","","","","","","","eventually::test","","eventually::test::command_handler","","","","","","","","","","eventually::test::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::version","","","","","","","","","","","","","","","","","",""],"d":["Module containing support for the Aggregate pattern.","Module containing support for Domain [Command]s.","Module <code>event</code> contains types and abstractions helpful for â€¦","","","","An Aggregate represents a Domain Model that, through an â€¦","This error is retured by <code>EventSourced::get</code> when the â€¦","This error is returned by <code>EventSourced::store</code> when the â€¦","A context object that should be used by the Aggregate Root â€¦","The error type that can be returned by <code>Aggregate::apply</code> â€¦","The error type that can be returned by the Repository â€¦","The type of Domain Events that interest this Aggregate. â€¦","An Event-sourced implementation of the Repository â€¦","List of possible errors that can be returned by an â€¦","An Event-sourced implementation of the Repository â€¦","The type used to uniquely identify the Aggregate.","This error is returned by <code>EventSourced::get</code> when the â€¦","A Repository is an object that allows to load and save an â€¦","An Aggregate Root represents the Domain Entity object used â€¦","This error is returned by <code>EventSourced::get</code> when the Event â€¦","Returns the unique identifier for the Aggregate instance.","Returns the unique identifier for the Aggregate instance.","Returns the unique identifier for the Aggregate instance.","Mutates the state of an Aggregate through a Domain Event.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Loads an Aggregate Root instance from the data store, â€¦","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new Aggregate Root instance by applying the â€¦","Creates a new Aggregate Root instance by applying the â€¦","Records a change to the Aggregate Root, expressed by the â€¦","Records a change to the Aggregate Root, expressed by the â€¦","","Provides convenient access to the Aggregate Root state.","Provides convenient access to the Aggregate Root state.","Stores a new version of an Aggregate Root instance to the â€¦","","","","","","","","","","","","","","Returns the current version for the Aggregate.","","","","A Command represents an intent by an Actor (e.g. a User, â€¦","The error type returned by the Handler while handling a [â€¦","A software component that is able to handle [Command]s of â€¦","Handles a [Command] and returns an error if the handling â€¦","Selects all [Events] in the Event Stream.","Disables any kind of optimistic concurrency check, â€¦","The error type returned by the Store during an [<code>append</code>] â€¦","An Event is a [Message] carring the information about a â€¦","The type containing all Domain Events recorded by the â€¦","Selects all [Events] in the Event Stream starting from the â€¦","Sets the expectation that the Event Stream must be at the â€¦","An [Event] that has been persisted to the Event Store.","An [Event] Store, used to store Domain Events in Event â€¦","Stream is a stream of Persisted Domain Events.","The error type returned by the Store during a [<code>stream</code>] â€¦","The type used to uniquely identify each Event Stream â€¦","Specifies an expectation on the Event Stream version â€¦","Specifies the slice of the Event Stream to select when â€¦","Appens new Domain Events to the specified Event Stream.","","","","","","","","","","","","","","","","","The actual Domain Event carried by this envelope.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Opens an Event Stream, effectively streaming all Domain â€¦","The id of the Event Stream the persisted Event belongs to.","","","","","","","","","","","","","The version of the Event Stream when this Event has been â€¦","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Module exposing a test Scenario type to write Domain [â€¦","","A test scenario that can be used to test a [Command] â€¦","","","Returns the argument unchanged.","Sets the precondition state of the system for the Scenarioâ€¦","Calls <code>U::from(self)</code>.","","","","Specifies the [Command] to test in the Scenario, in the â€¦","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,0,2,3,2,0,0,0,2,1,0,0,1,2,4,4,2,1,5,6,1,5,6,5,6,5,6,1,1,5,6,1,5,5,5,6,3,5,1,5,6,4,4,4,4,1,4,4,3,5,5,6,1,1,5,6,1,5,6,1,5,6,6,7,8,9,0,10,0,10,11,12,13,0,13,11,12,0,0,0,13,13,0,0,13,14,11,12,14,11,12,14,11,12,14,11,12,14,14,11,12,14,14,11,12,14,11,12,14,11,12,14,11,12,14,13,14,14,11,12,14,11,12,14,11,12,14,11,12,14,15,16,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,17,17,0,0,0,19,19,19,19,19,19,19,19,19,0,0,0,20,21,20,21,20,21,20,21,20,21,20,20,21,20,21,20,21,21,21,20,21,20,21,20,21,20,21,20,21,22,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["option",4]],["result",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["eventsourced",3,[["clone",8],["clone",8],["clone",8]]]],["eventsourced",3,[["clone",8],["clone",8],["clone",8]]]],[[["context",3,[["clone",8]]]],["context",3,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["eventsourcederror",4,[["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["eventsourcederror",4],["formatter",3]],["result",6]],[[["eventsourced",3,[["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["context",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[],["eventsourced",3]],[[]],[[["never",0]]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["eventsourced",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[["envelope",6]],["result",4]],[[["envelope",6]],["result",4]],[[["",0],["envelope",6]],["result",4]],[[["",0],["envelope",6]],["result",4]],[[["eventsourcederror",4]],["option",4,[["error",8]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["eventsourced",3],["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["context",3]],["version",6]],null,null,null,null,null,null,[[["",0],["envelope",6]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["streamversionexpected",4],["vec",3,[["envelope",6]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["persisted",3,[["clone",8],["clone",8]]]],["persisted",3,[["clone",8],["clone",8]]]],[[["versionselect",4]],["versionselect",4]],[[["streamversionexpected",4]],["streamversionexpected",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["result",4,[["persisted",3]]]],[[["persisted",3,[["partialeq",8],["partialeq",8]]],["persisted",3]],["bool",0]],[[["versionselect",4],["versionselect",4]],["bool",0]],[[["streamversionexpected",4],["streamversionexpected",4]],["bool",0]],null,[[["persisted",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["versionselect",4],["formatter",3]],["result",6]],[[["streamversionexpected",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["persisted",3,[["partialeq",8],["partialeq",8]]],["persisted",3]],["bool",0]],[[["versionselect",4],["versionselect",4]],["bool",0]],[[["streamversionexpected",4],["streamversionexpected",4]],["bool",0]],[[["persisted",3]],["result",4]],[[["",0],["versionselect",4]],["stream",6]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["envelope",3]],["envelope",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["envelope",3,[["clone",8]]]],["envelope",3,[["clone",8]]]],[[["",0],["",0]]],[[],["result",4,[["envelope",3]]]],[[["envelope",3],["envelope",3]],["bool",0]],[[["envelope",3,[["debug",8]]],["formatter",3]],["result",6]],[[],["envelope",3]],[[]],[[["never",0]]],[[]],null,null,[[["",0]],["str",0]],[[["envelope",3]],["result",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["scenario",3],["vec",3,[["persisted",3]]]],["scenariogiven",3]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["scenario",3],["envelope",6]],["scenariowhen",3]],null,null,null,[[["inmemory",3],["streamversionexpected",4],["vec",3,[["envelope",6]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["tracking",3],["streamversionexpected",4],["vec",3,[["envelope",6]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["inmemory",3,[["clone",8],["clone",8]]]],["inmemory",3,[["clone",8],["clone",8]]]],[[["tracking",3,[["clone",8]]]],["tracking",3,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["inmemory",3]],[[["inmemory",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["tracking",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["tracking",3]],["vec",3,[["persisted",3]]]],[[["tracking",3]]],[[["inmemory",3],["versionselect",4]],["stream",6]],[[["tracking",3],["versionselect",4]],["stream",6]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["tracking",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["conflicterror",3]],["conflicterror",3]],[[["",0],["",0]]],[[["conflicterror",3],["conflicterror",3]],["bool",0]],null,[[["conflicterror",3],["formatter",3]],["result",6]],[[["conflicterror",3],["formatter",3]],["result",6]],[[]],[[]],[[["conflicterror",3],["conflicterror",3]],["bool",0]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"EventSourcedError"],[8,"Aggregate"],[8,"Repository"],[8,"Root"],[3,"EventSourcedRepository"],[3,"Context"],[13,"RehydrateAggregate"],[13,"StreamFromStore"],[13,"AppendToStore"],[8,"Handler"],[4,"VersionSelect"],[4,"StreamVersionExpected"],[8,"Store"],[3,"Persisted"],[13,"MustBe"],[13,"From"],[3,"Envelope"],[8,"Message"],[3,"Scenario"],[3,"InMemory"],[3,"Tracking"],[8,"EventStoreExt"],[3,"ConflictError"]]},\
"eventually_postgres":{"doc":"<code>eventually</code> type implementations for PostgreSQL.","t":[2,2,2,2,0,0,0,13,13,13,4,3,3,3,6,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,3,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,4,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["EventStore","EventStoreBuilder","EventSubscriber","PersistentBuilder","store","subscriber","subscription","Bb8","DecodeEvent","EncodeEvents","Error","EventStore","EventStoreBuilder","EventStoreBuilderMigrated","PoolResult","Postgres","Result","append","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","fmt","fmt","fmt","for_aggregate","from","from","from","from","from","from","into","into","into","into","is_conflict_error","migrate_database","remove","source","stream","stream_all","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","Connection","Deserialize","EventSubscriber","Result","SubscriberError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","new","subscribe_all","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","Checkpoint","Error","Persistent","PersistentBuilder","Store","Subscriber","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checkpoint","fmt","fmt","from","from","from","get_or_create","into","into","into","new","resume","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0"],"q":["eventually_postgres","","","","","","","eventually_postgres::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually_postgres::store::Error","","","","eventually_postgres::subscriber","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually_postgres::subscriber::SubscriberError","","eventually_postgres::subscription","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually_postgres::subscription::Error","",""],"d":["","","","","Contains an <code>EventStore</code> implementation using PostgreSQL as â€¦","Contains an <code>EventSubscriber</code> implementation using PostgreSQL","Contains a persisted implementation of the <code>Subscription</code> â€¦","Error returned by bb8 connection pool.","Error when decoding persistent events from the database â€¦","Error when encoding the events in <code>append</code> to JSON prior to â€¦","Error type returned by the <code>EventStore</code> implementation, â€¦","<code>EventStore</code> implementation using a PostgreSQL backend.","Builder type for <code>EventStore</code> instances.","Builder step for <code>EventStore</code> instances, after the database â€¦","Result returning the connection pool <code>Error</code> type.","Error returned by Postgres when executing queries.","Result returning the crate <code>Error</code> type.","","","","","","","","","","Creates a new <code>EventStore</code> instance using the specified name â€¦","Returns a new builder instance after migrations have been â€¦","","","","","","Creates a new <code>EventStore</code> for an <code>Aggregate</code> type.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Ensure the database is migrated to the latest version.","","","","","","","","","","","","","","","","","","","","","","","","","","","Error variant returned when the connection, used for <code>LISTEN</code>","Error variant returned when deserializing payloads coming â€¦","Subscriber for listening to new events committed to an â€¦","Alias type for a <code>Result</code> having <code>SubscriberError</code> as error â€¦","Error returned by the <code>TryStream</code> on <code>subscribe_all</code>","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Opens a new <code>LISTEN</code> stream on the database pointed by the â€¦","","","","","","","","","","","","","","","Error variant returned when an issue has occurred during â€¦","Error types returned by a <code>Persistent</code> Subscription.","<code>Subscription</code> type with persistent state over a Postgres â€¦","Builder type for multiple <code>Persistent</code> Subscription instance.","Error variant returned when the cause of the error is â€¦","Error variant returned when the cause of the error is â€¦","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Persisted</code> Subscription with the specified â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>PersistentBuilder</code> instance.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,2,3,4,1,2,3,4,1,2,4,3,2,2,1,1,2,4,3,4,1,1,1,2,3,4,1,2,1,3,2,1,2,2,2,1,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,5,6,7,8,9,9,0,0,0,9,10,9,10,9,10,9,10,9,9,9,10,9,10,10,10,9,10,9,9,10,9,10,9,10,9,10,11,12,13,0,0,0,13,13,14,15,13,14,15,13,15,13,13,14,15,13,14,14,15,13,14,15,13,13,14,15,13,14,15,13,14,15,13,14,15,13,16,17,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventstore",3],["expected",4],["vec",3]],["boxfuture",6,[["result",6,[["u32",0]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["eventstorebuildermigrated",3],["str",0]],["future",8]],[[["eventstorebuilder",3],["pool",3,[["postgresconnectionmanager",3]]]],["eventstorebuildermigrated",3]],[[["eventstore",3,[["clone",8],["clone",8],["clone",8]]]],["eventstore",3,[["clone",8],["clone",8],["clone",8]]]],[[["",0],["",0]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["eventstore",3,[["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["eventstorebuildermigrated",3],["str",0],["",0]],["future",8]],[[]],[[]],[[]],[[["runerror",4,[["error",3]]]],["error",4]],[[["error",3]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[["error",4]],["bool",0]],[[["pool",3,[["postgresconnectionmanager",3]]]],["future",8]],[[["eventstore",3]],["boxfuture",6,[["result",6]]]],[[["error",4]],["option",4,[["error",8]]]],[[["eventstore",3],["select",4]],["boxfuture",6,[["result",6,[["eventstream",6,[["eventstore",3]]]]]]]],[[["eventstore",3],["select",4]],["boxfuture",6,[["result",6,[["eventstream",6,[["eventstore",3]]]]]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["subscribererror",4]],["subscribererror",4]],[[["eventsubscriber",3,[["clone",8],["clone",8]]]],["eventsubscriber",3,[["clone",8],["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["subscribererror",4],["formatter",3]],["result",6]],[[["subscribererror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",0],["str",0]],["future",8]],[[["eventsubscriber",3]],["eventstream",6,[["eventsubscriber",3]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["persistent",3],["u32",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["persistentbuilder",3],["string",3]],["future",8]],[[]],[[]],[[]],[[["pool",3,[["postgresconnectionmanager",3]]],["eventstore",3],["eventsubscriber",3]],["persistentbuilder",3]],[[["persistent",3]],["subscriptionstream",6,[["persistent",3]]]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null],"p":[[4,"Error"],[3,"EventStore"],[3,"EventStoreBuilder"],[3,"EventStoreBuilderMigrated"],[13,"DecodeEvent"],[13,"EncodeEvents"],[13,"Postgres"],[13,"Bb8"],[4,"SubscriberError"],[3,"EventSubscriber"],[13,"Deserialize"],[13,"Connection"],[4,"Error"],[3,"PersistentBuilder"],[3,"Persistent"],[13,"Store"],[13,"Subscriber"],[13,"Checkpoint"]]},\
"eventually_redis":{"doc":"Redis backend implementation for <code>eventually</code> crate.","t":[3,3,3,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Builder","BuilderWithSourceName","EventStore","EventSubscriber","PersistentSubscription","STREAM_PAGE_DEFAULT","append","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_persistent_subscription","build_store","build_subscriber","checkpoint","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from","into","into","into","into","into","new","remove","resume","source_name","stream","stream_all","stream_page_size","stream_page_size","subscribe_all","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["eventually_redis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Builder type for <code>EventStore</code> and <code>EventSubscriber</code> types.","Second-step builder type for <code>EventStore</code> and <code>EventSubscriber</code>â€¦","Redis backend implementation for <code>eventually::EventStore</code> â€¦","Redis backend implementation for â€¦","<code>Subscription</code> implementation with persistent state over a â€¦","Default size of a paginated request to Redis â€¦","","","","","","","","","","","","Builds a new named <code>PersistentSubscription</code> instance.","Builds a new <code>EventStore</code> instance.","Builds a new <code>EventSubscriber</code> instance.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new builder instance using the specified Redis â€¦","","","Assignes the specified source name to a copy of the â€¦","","","Changes the page size used by the <code>Stream</code> returned in â€¦","Changes the page size used by the <code>Stream</code> returned in â€¦","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,2,3,4,5,1,2,3,4,5,5,5,5,3,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,4,1,3,4,1,1,4,5,2,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5],"f":[null,null,null,null,null,null,[[["eventstore",3],["expected",4],["vec",3]],["boxfuture",6,[["result",4,[["u32",0],["storeerror",4]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["builderwithsourcename",3],["str",0]],["future",8]],[[["builderwithsourcename",3]],["future",8]],[[["builderwithsourcename",3]],["eventsubscriber",3]],[[["persistentsubscription",3],["u32",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["eventstore",3,[["clone",8],["clone",8]]]],["eventstore",3,[["clone",8],["clone",8]]]],[[["eventsubscriber",3,[["clone",8],["clone",8]]]],["eventsubscriber",3,[["clone",8],["clone",8]]]],[[["persistentsubscription",3,[["clone",8],["clone",8]]]],["persistentsubscription",3,[["clone",8],["clone",8]]]],[[["builder",3]],["builder",3]],[[["builderwithsourcename",3]],["builderwithsourcename",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["client",3]],["builder",3]],[[["eventstore",3]],["boxfuture",6,[["result",4,[["storeerror",4]]]]]],[[["persistentsubscription",3]],["subscriptionstream",6,[["persistentsubscription",3]]]],[[["builder",3],["str",0]],["builderwithsourcename",3]],[[["eventstore",3],["select",4]],["boxfuture",6,[["result",4,[["storeeventstream",6,[["eventstore",3]]],["storeerror",4]]]]]],[[["eventstore",3],["select",4]],["boxfuture",6,[["result",4,[["storeeventstream",6,[["eventstore",3]]],["storeerror",4]]]]]],[[["builder",3],["usize",0]],["builder",3]],[[["builderwithsourcename",3],["usize",0]],["builderwithsourcename",3]],[[["eventsubscriber",3]],["subscribereventstream",6,[["eventsubscriber",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"EventStore"],[3,"EventSubscriber"],[3,"PersistentSubscription"],[3,"Builder"],[3,"BuilderWithSourceName"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
