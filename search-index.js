var searchIndex = JSON.parse('{\
"bank_accounting":{"doc":"","t":[0,0,0,0,3,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,4,6,6,6,3,13,13,13,13,13,13,13,13,3,6,13,13,13,13,13,13,13,13,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,3,3,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11],"n":["application","domain","grpc","proto","DepositInBankAccount","OpenBankAccount","SendTransferToBankAccount","Service","amount","bank_account_holder_id","bank_account_id","bank_account_id","bank_account_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","handle","handle","handle","into","into","into","into","into_request","into_request","into_request","into_request","message","name","name","name","ne","ne","ne","opening_balance","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AlreadyClosed","AlreadyOpened","BankAccount","BankAccountError","BankAccountEvent","BankAccountHolderId","BankAccountId","BankAccountRepository","BankAccountRoot","Closed","DepositWasRecorded","EmptyAccountHolderId","EmptyAccountId","InsufficientFunds","NegativeDepositAttempted","NoMoneyDeposited","NotOpenedYet","Transaction","TransactionId","TransferWasConfirmed","TransferWasDeclined","TransferWasReceived","TransferWasSent","WasClosed","WasOpened","WasReopened","WrongTransactionRecipient","aggregate_id","amount","apply","beneficiary_account_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","deposit","deref","deref_mut","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","name","ne","ne","ne","open","receive_transfer","record_transfer_success","reopen","send_transfer","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","account_holder_id","amount","id","initial_balance","message","message","reason","reopening_balance","transaction","transaction","transaction_id","transaction_id","BankAccountingApi","borrow","borrow_mut","clone","clone_into","deposit_in_bank_account","from","from","into","into_request","open_bank_account","to_owned","try_from","try_into","type_id","vzip","DepositInBankAccountRequest","DepositInBankAccountResponse","FILE_DESCRIPTOR_SET","OpenBankAccountRequest","OpenBankAccountResponse","amount","bank_account_holder_id","bank_account_id","bank_account_id","bank_accounting_server","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","ne","ne","opening_balance","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BankAccounting","BankAccountingServer","accept_gzip","borrow","borrow_mut","call","call","clone","clone_into","deposit_in_bank_account","fmt","from","into","into_request","new","open_bank_account","poll_ready","poll_ready","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["bank_accounting","","","","bank_accounting::application","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bank_accounting::domain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bank_accounting::domain::BankAccountError","bank_accounting::domain::BankAccountEvent","","","","","","","","","","","","bank_accounting::grpc","","","","","","","","","","","","","","","","bank_accounting::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bank_accounting::proto::bank_accounting_server","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be â€¦","","Enable decompressing requests with <code>gzip</code>.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Compress responses with <code>gzip</code>, if the client supports it.","","","","","",""],"i":[0,0,0,0,0,0,0,0,4,3,3,4,5,2,3,4,5,2,3,4,5,2,3,4,5,2,3,4,5,3,4,5,3,4,5,3,4,5,2,2,2,3,4,5,2,2,2,2,3,4,5,2,3,4,5,5,3,4,5,3,4,5,3,2,3,4,5,5,2,3,4,5,2,3,4,5,2,3,4,5,2,3,4,5,22,22,0,0,0,0,0,0,0,22,21,22,22,22,22,22,22,0,0,21,21,21,21,21,21,21,22,18,20,18,20,20,21,22,18,23,20,21,22,18,23,20,21,22,18,23,20,21,22,18,23,23,23,23,23,20,21,22,20,21,22,20,21,22,22,18,23,20,21,22,18,23,23,20,20,21,22,18,23,20,21,22,18,23,21,20,21,22,23,23,23,23,23,20,21,22,18,23,22,20,21,22,18,23,20,21,22,18,23,20,21,22,18,23,20,21,22,18,23,43,44,45,44,44,46,47,48,49,46,47,48,50,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,31,32,32,31,0,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,31,32,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,32,33,31,34,0,0,37,37,37,37,37,37,37,36,37,37,37,37,37,36,37,37,37,37,37,37,37,37,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[3,3],6],[[4,4],6],[[5,5],6],[[],6],[[],6],[[],6],[[3,7],8],[[4,7],8],[[5,7],8],[[]],[9],[[],2],[[]],[[]],[[]],[[2,[10,[5]]],[[13,[[12,[11]]]]]],[[2,[10,[3]]],[[13,[[12,[11]]]]]],[[2,[10,[4]]],[[13,[[12,[11]]]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],0,[3,15],[4,15],[5,15],[[3,3],6],[[4,4],6],[[5,5],6],0,[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18],0,[[[19,[18]]],[[16,[18]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[22,22],[18,18],[23,23],[[]],[[]],[[]],[[]],[[]],[23,[[16,[22]]]],[[23,24],[[16,[22]]]],[23],[23],[[20,20],6],[[21,21],6],[[22,22],6],[[],6],[[],6],[[],6],[[20,7],8],[[21,7],8],[[22,7],8],[[22,7],8],[[18,7],8],[[23,7],8],[[]],[[]],[[]],[[]],[[]],[[[25,[18]]],23],0,[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[21,15],[[20,20],6],[[21,21],6],[[22,22],6],[[26,27,[19,[24]]],[[16,[23,22]]]],[[23,20,[19,[28]]],[[16,[22]]]],[[23,29],[[16,[22]]]],[[23,[19,[24]]],[[16,[22]]]],[[23,20,[19,[28]]],[[16,[22]]]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[30,[1]]],[[30,[1]]]],[[]],[[30,[14,[31]]],[[13,[[12,[11]]]]]],[2,30],[[]],[[]],[[],14],[[30,[14,[32]]],[[13,[[12,[11]]]]]],[[]],[[],16],[[],16],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32],[33],[31],[34],[32,32],[33,33],[31,31],[34,34],[[]],[[]],[[]],[[]],[[],32],[[],33],[[],31],[[],34],[32,35],[33,35],[31,35],[34,35],[[32,32],6],[[33,33],6],[[31,31],6],[[34,34],6],[[32,7],8],[[33,7],8],[[31,7],8],[[34,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[32,32],6],[[31,31],6],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],0,0,[[[37,[36]]],[[37,[36]]]],[[]],[[]],[38],[[37,38]],[[[37,[36]]],[[37,[36]]]],[[]],[[[14,[31]]],[[13,[[12,[11]]]]]],[[[37,[[0,[39,36]]]],7],8],[[]],[[]],[[],14],[36,[[37,[36]]]],[[[14,[32]]],[[13,[[12,[11]]]]]],[40,[[41,[16]]]],[[37,40],[[41,[16]]]],[[[37,[36]]],[[37,[36]]]],[[]],[[],16],[[],16],[[],17],[[]],[36,[[42,[[37,[36]]]]]]],"p":[[8,"Clone"],[3,"Service"],[3,"OpenBankAccount"],[3,"DepositInBankAccount"],[3,"SendTransferToBankAccount"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"never"],[6,"Envelope"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Request"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"BankAccount"],[4,"Option"],[3,"Transaction"],[4,"BankAccountEvent"],[4,"BankAccountError"],[3,"BankAccountRoot"],[3,"Decimal"],[3,"Root"],[6,"BankAccountId"],[6,"BankAccountHolderId"],[3,"String"],[6,"TransactionId"],[3,"BankAccountingApi"],[3,"DepositInBankAccountRequest"],[3,"OpenBankAccountRequest"],[3,"OpenBankAccountResponse"],[3,"DepositInBankAccountResponse"],[15,"usize"],[8,"BankAccounting"],[3,"BankAccountingServer"],[3,"Request"],[8,"Debug"],[3,"Context"],[4,"Poll"],[3,"InterceptedService"],[13,"WrongTransactionRecipient"],[13,"WasOpened"],[13,"DepositWasRecorded"],[13,"TransferWasSent"],[13,"TransferWasReceived"],[13,"TransferWasDeclined"],[13,"WasReopened"],[13,"TransferWasConfirmed"]]},\
"eventually":{"doc":"","t":[0,0,0,0,0,8,13,13,16,16,16,3,4,3,16,13,8,3,13,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,6,16,8,10,0,3,11,11,11,11,11,11,11,11,11,13,13,16,6,16,13,13,3,8,6,16,16,4,4,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,6,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,3,6,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["aggregate","command","event","message","version","Aggregate","AggregateRootNotFound","AppendToStore","Error","Error","Event","EventSourced","EventSourcedError","EventSourcedRepository","Id","RehydrateAggregate","Repository","Root","StreamFromStore","aggregate_id","aggregate_id","apply","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get","into","into","into","record_new","record_that","source","store","store","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","0","0","0","Envelope","Error","Handler","handle","test","Scenario","borrow","borrow_mut","from","given","into","try_from","try_into","type_id","when","All","Any","AppendError","Envelope","Event","From","MustBe","Persisted","Store","Stream","StreamError","StreamId","StreamVersionExpected","VersionSelect","append","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","eq","eq","eq","event","fmt","fmt","fmt","from","from","from","into","into","into","ne","ne","ne","serialize","store","stream","stream_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","0","0","EventStoreExt","InMemory","Tracking","append","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","into","into","recorded_events","reset_recorded_events","stream","stream","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_recorded_events_tracking","Envelope","Message","Metadata","and_metadata","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","from","from","into","message","metadata","name","serialize","to_owned","try_from","try_into","type_id","ConflictError","Version","actual","borrow","borrow_mut","clone","clone_into","eq","expected","fmt","fmt","from","into","ne","to_owned","to_string","try_from","try_into","type_id"],"q":["eventually","","","","","eventually::aggregate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::aggregate::EventSourcedError","","","eventually::command","","","","","eventually::command::test","","","","","","","","","","eventually::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::event::StreamVersionExpected","eventually::event::VersionSelect","eventually::event::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eventually::message","","","","","","","","","","","","","","","","","","","","","","","eventually::version","","","","","","","","","","","","","","","","","",""],"d":["Module containing support for the Aggregate pattern.","Module containing support for Domain [Command]s.","Module <code>event</code> contains types and abstractions helpful for â€¦","","","An Aggregate represents a Domain Model that, through an â€¦","This error is retured by <code>EventSourced::get</code> when the â€¦","This error is returned by <code>EventSourced::store</code> when the â€¦","The error type that can be returned by <code>Aggregate::apply</code> â€¦","The error type that can be returned by the Repository â€¦","The type of Domain Events that interest this Aggregate. â€¦","An Event-sourced implementation of the Repository â€¦","List of possible errors that can be returned by an â€¦","An Event-sourced implementation of the Repository â€¦","The type used to uniquely identify the Aggregate.","This error is returned by <code>EventSourced::get</code> when the â€¦","A Repository is an object that allows to load and save an [â€¦","An Aggregate Root represents the Domain Entity object used â€¦","This error is returned by <code>EventSourced::get</code> when the Event â€¦","Returns the unique identifier for the Aggregate instance.","Returns the unique identifier of the Aggregate.","Mutates the state of an Aggregate through a Domain Event.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Loads an Aggregate Root instance from the data store, â€¦","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new Aggregate Root instance by applying the â€¦","Records a change to the Aggregate Root, expressed by the â€¦","","Stores a new version of an Aggregate Root instance to the â€¦","","","","","","","","","","","","","","Returns the current version for the Aggregate.","","","","A Command represents an intent by an Actor (e.g. a User, â€¦","The error type returned by the Handler while handling a [â€¦","A software component that is able to handle [Command]s of â€¦","Handles a [Command] and returns an error if the handling â€¦","Module exposing a test Scenario type to write Domain [â€¦","A test scenario that can be used to test a [Command] â€¦","","","Returns the argument unchanged.","Sets the precondition state of the system for the Scenarioâ€¦","Calls <code>U::from(self)</code>.","","","","Specifies the [Command] to test in the Scenario, in the â€¦","Selects all [Events] in the Event Stream.","Disables any kind of optimistic concurrency check, â€¦","The error type returned by the Store during an [<code>append</code>] â€¦","An Event is a [Message] carring the information about a â€¦","The type containing all Domain Events recorded by the â€¦","Selects all [Events] in the Event Stream starting from the â€¦","Sets the expectation that the Event Stream must be at the â€¦","An [Event] that has been persisted to the Event Store.","An [Event] Store, used to store Domain Events in Event â€¦","Stream is a stream of Persisted Domain Events.","The error type returned by the Store during a [<code>stream</code>] â€¦","The type used to uniquely identify each Event Stream â€¦","Specifies an expectation on the Event Stream version â€¦","Specifies the slice of the Event Stream to select when â€¦","Appens new Domain Events to the specified Event Stream.","","","","","","","","","","","","","","","","","The actual Domain Event carried by this envelope.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Opens an Event Stream, effectively streaming all Domain â€¦","The id of the Event Stream the persisted Event belongs to.","","","","","","","","","","","","","The version of the Event Stream when this Event has been â€¦","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,6,6,33,34,33,0,0,0,33,6,0,0,6,33,1,33,6,5,1,6,5,1,5,1,5,1,1,6,6,5,1,6,5,5,5,1,34,5,6,5,1,1,1,6,34,5,5,1,6,6,5,1,6,5,1,6,5,1,1,35,36,37,0,38,0,38,0,0,20,20,20,20,20,20,20,20,20,24,23,39,0,39,24,23,0,0,0,39,39,0,0,39,21,24,23,21,24,23,21,24,23,21,24,23,21,21,24,23,21,21,24,23,21,24,23,21,24,23,21,24,23,21,0,39,21,21,24,23,21,24,23,21,24,23,21,24,23,21,40,41,0,0,0,28,29,28,29,28,29,28,29,28,29,28,28,29,28,29,28,29,29,29,28,29,28,29,28,29,28,29,28,29,42,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,43,30,30,30,30,30,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[1],[2,3],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4,4]]],[[5,[4,4]]]],[[[1,[4]]],[[1,[4]]]],[[]],[[]],[1],[[6,7],8],[[[6,[9,9,9]],7],8],[[[5,[9,9]],7],8],[[[1,[9]],7],8],[[]],[10],[[]],[[],5],[[]],[[],[[13,[[12,[11]]]]]],[5,[[13,[[12,[11]]]]]],[[]],[[]],[[]],[14,[[3,[1]]]],[[1,14],3],[6,[[2,[15]]]],[1,[[13,[[12,[11]]]]]],[[5,1],[[13,[[12,[11]]]]]],[[]],[[]],[[],16],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],17],[[],17],[[],17],[1,18],0,0,0,0,0,0,[19,[[13,[[12,[11]]]]]],0,0,[[]],[[]],[[]],0,[[]],[[],3],[[],3],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[23,[22,[14]]],[[13,[[12,[11]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[4,4]]],[[21,[4,4]]]],[24,24],[23,23],[[]],[[]],[[]],[[],[[3,[21]]]],[[[21,[25,25]],21],26],[[24,24],26],[[23,23],26],0,[[[21,[9,9]],7],8],[[24,7],8],[[23,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[25,25]],21],26],[[24,24],26],[[23,23],26],[21,3],0,[24,27],0,[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],17],[[],17],[[],17],0,0,0,0,0,0,[[28,23,[22,[14]]],[[13,[[12,[11]]]]]],[[29,23,[22,[14]]],[[13,[[12,[11]]]]]],[[]],[[]],[[]],[[]],[[[28,[4,4]]],[[28,[4,4]]]],[[[29,[4]]],[[29,[4]]]],[[]],[[]],[[],28],[[[28,[9,9]],7],8],[[[29,[9]],7],8],[[]],[[]],[[]],[[]],[29,[[22,[21]]]],[29],[[28,24],27],[[29,24],27],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],17],[[],17],[[],29],0,0,0,[30,30],[[]],[[]],[[[30,[4]]],[[30,[4]]]],[[]],[[],[[3,[30]]]],[[30,30],26],[[[30,[9]],7],8],[[]],[10],[[],30],[[]],0,0,[[],31],[30,3],[[]],[[],3],[[],3],[[],17],0,0,0,[[]],[[]],[32,32],[[]],[[32,32],26],0,[[32,7],8],[[32,7],8],[[]],[[]],[[32,32],26],[[]],[[],16],[[],3],[[],3],[[],17]],"p":[[3,"Root"],[4,"Option"],[4,"Result"],[8,"Clone"],[3,"EventSourcedRepository"],[4,"EventSourcedError"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"Future"],[3,"Box"],[3,"Pin"],[6,"Envelope"],[8,"Error"],[3,"String"],[3,"TypeId"],[6,"Version"],[6,"Envelope"],[3,"Scenario"],[3,"Persisted"],[3,"Vec"],[4,"StreamVersionExpected"],[4,"VersionSelect"],[8,"PartialEq"],[15,"bool"],[6,"Stream"],[3,"InMemory"],[3,"Tracking"],[3,"Envelope"],[15,"str"],[3,"ConflictError"],[8,"Aggregate"],[8,"Repository"],[13,"RehydrateAggregate"],[13,"StreamFromStore"],[13,"AppendToStore"],[8,"Handler"],[8,"Store"],[13,"MustBe"],[13,"From"],[8,"EventStoreExt"],[8,"Message"]]},\
"eventually_macros":{"doc":"Module containing useful macros for the eventually crate.","t":[24,23],"n":["Message","aggregate_root"],"q":["eventually_macros",""],"d":["","Implements a newtype to use the eventually::aggregate::Rootâ€¦"],"i":[0,0],"f":[0,0],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
