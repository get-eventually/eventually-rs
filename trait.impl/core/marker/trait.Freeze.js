(function() {var implementors = {
"bank_accounting":[["impl Freeze for <a class=\"struct\" href=\"bank_accounting/application/struct.Service.html\" title=\"struct bank_accounting::application::Service\">Service</a>",1,["bank_accounting::application::Service"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/application/struct.OpenBankAccount.html\" title=\"struct bank_accounting::application::OpenBankAccount\">OpenBankAccount</a>",1,["bank_accounting::application::OpenBankAccount"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/application/struct.DepositInBankAccount.html\" title=\"struct bank_accounting::application::DepositInBankAccount\">DepositInBankAccount</a>",1,["bank_accounting::application::DepositInBankAccount"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/application/struct.SendTransferToBankAccount.html\" title=\"struct bank_accounting::application::SendTransferToBankAccount\">SendTransferToBankAccount</a>",1,["bank_accounting::application::SendTransferToBankAccount"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/domain/struct.Transaction.html\" title=\"struct bank_accounting::domain::Transaction\">Transaction</a>",1,["bank_accounting::domain::Transaction"]],["impl Freeze for <a class=\"enum\" href=\"bank_accounting/domain/enum.BankAccountEvent.html\" title=\"enum bank_accounting::domain::BankAccountEvent\">BankAccountEvent</a>",1,["bank_accounting::domain::BankAccountEvent"]],["impl Freeze for <a class=\"enum\" href=\"bank_accounting/domain/enum.BankAccountError.html\" title=\"enum bank_accounting::domain::BankAccountError\">BankAccountError</a>",1,["bank_accounting::domain::BankAccountError"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/domain/struct.BankAccount.html\" title=\"struct bank_accounting::domain::BankAccount\">BankAccount</a>",1,["bank_accounting::domain::BankAccount"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/domain/struct.BankAccountRoot.html\" title=\"struct bank_accounting::domain::BankAccountRoot\">BankAccountRoot</a>",1,["bank_accounting::domain::BankAccountRoot"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/grpc/struct.BankAccountingApi.html\" title=\"struct bank_accounting::grpc::BankAccountingApi\">BankAccountingApi</a>",1,["bank_accounting::grpc::BankAccountingApi"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bank_accounting/proto/bank_accounting_server/struct.BankAccountingServer.html\" title=\"struct bank_accounting::proto::bank_accounting_server::BankAccountingServer\">BankAccountingServer</a>&lt;T&gt;",1,["bank_accounting::proto::bank_accounting_server::BankAccountingServer"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.WasOpened.html\" title=\"struct bank_accounting::proto::event::WasOpened\">WasOpened</a>",1,["bank_accounting::proto::event::WasOpened"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.DepositWasRecorded.html\" title=\"struct bank_accounting::proto::event::DepositWasRecorded\">DepositWasRecorded</a>",1,["bank_accounting::proto::event::DepositWasRecorded"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.TransferWasSent.html\" title=\"struct bank_accounting::proto::event::TransferWasSent\">TransferWasSent</a>",1,["bank_accounting::proto::event::TransferWasSent"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.TransferWasReceived.html\" title=\"struct bank_accounting::proto::event::TransferWasReceived\">TransferWasReceived</a>",1,["bank_accounting::proto::event::TransferWasReceived"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.TransferWasDeclined.html\" title=\"struct bank_accounting::proto::event::TransferWasDeclined\">TransferWasDeclined</a>",1,["bank_accounting::proto::event::TransferWasDeclined"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.TransferWasConfirmed.html\" title=\"struct bank_accounting::proto::event::TransferWasConfirmed\">TransferWasConfirmed</a>",1,["bank_accounting::proto::event::TransferWasConfirmed"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.WasClosed.html\" title=\"struct bank_accounting::proto::event::WasClosed\">WasClosed</a>",1,["bank_accounting::proto::event::WasClosed"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/event/struct.WasReopened.html\" title=\"struct bank_accounting::proto::event::WasReopened\">WasReopened</a>",1,["bank_accounting::proto::event::WasReopened"]],["impl Freeze for <a class=\"enum\" href=\"bank_accounting/proto/event/enum.Event.html\" title=\"enum bank_accounting::proto::event::Event\">Event</a>",1,["bank_accounting::proto::event::Event"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/struct.OpenBankAccountRequest.html\" title=\"struct bank_accounting::proto::OpenBankAccountRequest\">OpenBankAccountRequest</a>",1,["bank_accounting::proto::OpenBankAccountRequest"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/struct.OpenBankAccountResponse.html\" title=\"struct bank_accounting::proto::OpenBankAccountResponse\">OpenBankAccountResponse</a>",1,["bank_accounting::proto::OpenBankAccountResponse"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/struct.DepositInBankAccountRequest.html\" title=\"struct bank_accounting::proto::DepositInBankAccountRequest\">DepositInBankAccountRequest</a>",1,["bank_accounting::proto::DepositInBankAccountRequest"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/struct.DepositInBankAccountResponse.html\" title=\"struct bank_accounting::proto::DepositInBankAccountResponse\">DepositInBankAccountResponse</a>",1,["bank_accounting::proto::DepositInBankAccountResponse"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/struct.Transaction.html\" title=\"struct bank_accounting::proto::Transaction\">Transaction</a>",1,["bank_accounting::proto::Transaction"]],["impl Freeze for <a class=\"struct\" href=\"bank_accounting/proto/struct.Event.html\" title=\"struct bank_accounting::proto::Event\">Event</a>",1,["bank_accounting::proto::Event"]]],
"eventually":[["impl Freeze for <a class=\"enum\" href=\"eventually/aggregate/repository/enum.GetError.html\" title=\"enum eventually::aggregate::repository::GetError\">GetError</a>",1,["eventually::aggregate::repository::GetError"]],["impl Freeze for <a class=\"enum\" href=\"eventually/aggregate/repository/enum.SaveError.html\" title=\"enum eventually::aggregate::repository::SaveError\">SaveError</a>",1,["eventually::aggregate::repository::SaveError"]],["impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"eventually/aggregate/repository/struct.EventSourced.html\" title=\"struct eventually::aggregate::repository::EventSourced\">EventSourced</a>&lt;T, S&gt;<div class=\"where\">where\n    S: Freeze,</div>",1,["eventually::aggregate::repository::EventSourced"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"eventually/aggregate/test/struct.Scenario.html\" title=\"struct eventually::aggregate::test::Scenario\">Scenario</a>&lt;T&gt;",1,["eventually::aggregate::test::Scenario"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"eventually/aggregate/struct.Root.html\" title=\"struct eventually::aggregate::Root\">Root</a>&lt;T&gt;<div class=\"where\">where\n    T: Freeze,</div>",1,["eventually::aggregate::Root"]],["impl&lt;T, I&gt; Freeze for <a class=\"enum\" href=\"eventually/aggregate/enum.RehydrateError.html\" title=\"enum eventually::aggregate::RehydrateError\">RehydrateError</a>&lt;T, I&gt;<div class=\"where\">where\n    I: Freeze,\n    T: Freeze,</div>",1,["eventually::aggregate::RehydrateError"]],["impl Freeze for <a class=\"struct\" href=\"eventually/command/test/struct.Scenario.html\" title=\"struct eventually::command::test::Scenario\">Scenario</a>",1,["eventually::command::test::Scenario"]],["impl Freeze for <a class=\"enum\" href=\"eventually/event/store/enum.AppendError.html\" title=\"enum eventually::event::store::AppendError\">AppendError</a>",1,["eventually::event::store::AppendError"]],["impl&lt;Id, Evt&gt; Freeze for <a class=\"struct\" href=\"eventually/event/store/struct.InMemory.html\" title=\"struct eventually::event::store::InMemory\">InMemory</a>&lt;Id, Evt&gt;",1,["eventually::event::store::InMemory"]],["impl&lt;T, StreamId, Event&gt; Freeze for <a class=\"struct\" href=\"eventually/event/store/struct.Tracking.html\" title=\"struct eventually::event::store::Tracking\">Tracking</a>&lt;T, StreamId, Event&gt;<div class=\"where\">where\n    T: Freeze,</div>",1,["eventually::event::store::Tracking"]],["impl&lt;Id, Evt&gt; Freeze for <a class=\"struct\" href=\"eventually/event/struct.Persisted.html\" title=\"struct eventually::event::Persisted\">Persisted</a>&lt;Id, Evt&gt;<div class=\"where\">where\n    Evt: Freeze,\n    Id: Freeze,</div>",1,["eventually::event::Persisted"]],["impl Freeze for <a class=\"enum\" href=\"eventually/event/enum.VersionSelect.html\" title=\"enum eventually::event::VersionSelect\">VersionSelect</a>",1,["eventually::event::VersionSelect"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"eventually/message/struct.Envelope.html\" title=\"struct eventually::message::Envelope\">Envelope</a>&lt;T&gt;<div class=\"where\">where\n    T: Freeze,</div>",1,["eventually::message::Envelope"]],["impl&lt;In, Out, S&gt; Freeze for <a class=\"struct\" href=\"eventually/serde/struct.Convert.html\" title=\"struct eventually::serde::Convert\">Convert</a>&lt;In, Out, S&gt;<div class=\"where\">where\n    S: Freeze,</div>",1,["eventually::serde::Convert"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"eventually/serde/struct.Json.html\" title=\"struct eventually::serde::Json\">Json</a>&lt;T&gt;",1,["eventually::serde::Json"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"eventually/serde/struct.Protobuf.html\" title=\"struct eventually::serde::Protobuf\">Protobuf</a>&lt;T&gt;",1,["eventually::serde::Protobuf"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"eventually/serde/struct.ProtoJson.html\" title=\"struct eventually::serde::ProtoJson\">ProtoJson</a>&lt;T&gt;",1,["eventually::serde::ProtoJson"]],["impl&lt;T, Inner&gt; Freeze for <a class=\"struct\" href=\"eventually/tracing/struct.InstrumentedAggregateRepository.html\" title=\"struct eventually::tracing::InstrumentedAggregateRepository\">InstrumentedAggregateRepository</a>&lt;T, Inner&gt;<div class=\"where\">where\n    Inner: Freeze,</div>",1,["eventually::tracing::InstrumentedAggregateRepository"]],["impl&lt;T, StreamId, Event&gt; Freeze for <a class=\"struct\" href=\"eventually/tracing/struct.InstrumentedEventStore.html\" title=\"struct eventually::tracing::InstrumentedEventStore\">InstrumentedEventStore</a>&lt;T, StreamId, Event&gt;<div class=\"where\">where\n    T: Freeze,</div>",1,["eventually::tracing::InstrumentedEventStore"]],["impl Freeze for <a class=\"enum\" href=\"eventually/version/enum.Check.html\" title=\"enum eventually::version::Check\">Check</a>",1,["eventually::version::Check"]],["impl Freeze for <a class=\"struct\" href=\"eventually/version/struct.ConflictError.html\" title=\"struct eventually::version::ConflictError\">ConflictError</a>",1,["eventually::version::ConflictError"]]],
"eventually_postgres":[["impl&lt;T, Serde, EvtSerde&gt; Freeze for <a class=\"struct\" href=\"eventually_postgres/aggregate/struct.Repository.html\" title=\"struct eventually_postgres::aggregate::Repository\">Repository</a>&lt;T, Serde, EvtSerde&gt;<div class=\"where\">where\n    EvtSerde: Freeze,\n    Serde: Freeze,</div>",1,["eventually_postgres::aggregate::Repository"]],["impl Freeze for <a class=\"enum\" href=\"eventually_postgres/event/enum.StreamError.html\" title=\"enum eventually_postgres::event::StreamError\">StreamError</a>",1,["eventually_postgres::event::StreamError"]],["impl&lt;Id, Evt, Serde&gt; Freeze for <a class=\"struct\" href=\"eventually_postgres/event/struct.Store.html\" title=\"struct eventually_postgres::event::Store\">Store</a>&lt;Id, Evt, Serde&gt;<div class=\"where\">where\n    Serde: Freeze,</div>",1,["eventually_postgres::event::Store"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()