(function() {var implementors = {};
implementors["bank_accounting"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"bank_accounting/proto/struct.OpenBankAccountRequest.html\" title=\"struct bank_accounting::proto::OpenBankAccountRequest\">OpenBankAccountRequest</a>","synthetic":false,"types":["bank_accounting::proto::OpenBankAccountRequest"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"bank_accounting/proto/struct.OpenBankAccountResponse.html\" title=\"struct bank_accounting::proto::OpenBankAccountResponse\">OpenBankAccountResponse</a>","synthetic":false,"types":["bank_accounting::proto::OpenBankAccountResponse"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"bank_accounting/proto/struct.DepositInBankAccountRequest.html\" title=\"struct bank_accounting::proto::DepositInBankAccountRequest\">DepositInBankAccountRequest</a>","synthetic":false,"types":["bank_accounting::proto::DepositInBankAccountRequest"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"bank_accounting/proto/struct.DepositInBankAccountResponse.html\" title=\"struct bank_accounting::proto::DepositInBankAccountResponse\">DepositInBankAccountResponse</a>","synthetic":false,"types":["bank_accounting::proto::DepositInBankAccountResponse"]}];
implementors["eventually"] = [{"text":"impl&lt;Id, Evt&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"eventually/test/store/struct.InMemory.html\" title=\"struct eventually::test::store::InMemory\">InMemory</a>&lt;Id, Evt&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Evt: <a class=\"trait\" href=\"eventually/message/trait.Message.html\" title=\"trait eventually::message::Message\">Message</a>,&nbsp;</span>","synthetic":false,"types":["eventually::test::store::InMemory"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()