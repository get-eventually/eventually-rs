name: Continuous Integration
on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.required }}
    strategy:
      matrix:
        build: [stable, nightly]
        include:
          - build: stable
            required: true
            toolchain: stable
          - build: nightly
            required: false
            toolchain: nightly

    services:
      postgres:
        env:
          POSTGRES_USER: eventually
          POSTGRES_PASSWORD: password
          POSTGRES_DB: eventually
        image: postgres:latest
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features
        env:
          DATABASE_URL: postgres://eventually:password@localhost:5432/eventually?sslmode=disable

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        env:
          POSTGRES_USER: eventually
          POSTGRES_PASSWORD: password
          POSTGRES_DB: eventually
        image: postgres:latest
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: checkout source
        uses: actions/checkout@v3

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: --workspace --all-features
        env:
          DATABASE_URL: postgres://eventually:password@localhost:5432/eventually?sslmode=disable

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml

  formatting:
    name: Rustfmt Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  lint:
    name: Clippy Lint
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy,rustfmt

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
